// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_16u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        data_V_data_8_V_dout,
        data_V_data_8_V_empty_n,
        data_V_data_8_V_read,
        data_V_data_9_V_dout,
        data_V_data_9_V_empty_n,
        data_V_data_9_V_read,
        data_V_data_10_V_dout,
        data_V_data_10_V_empty_n,
        data_V_data_10_V_read,
        data_V_data_11_V_dout,
        data_V_data_11_V_empty_n,
        data_V_data_11_V_read,
        data_V_data_12_V_dout,
        data_V_data_12_V_empty_n,
        data_V_data_12_V_read,
        data_V_data_13_V_dout,
        data_V_data_13_V_empty_n,
        data_V_data_13_V_read,
        data_V_data_14_V_dout,
        data_V_data_14_V_empty_n,
        data_V_data_14_V_read,
        data_V_data_15_V_dout,
        data_V_data_15_V_empty_n,
        data_V_data_15_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write,
        res_V_data_8_V_din,
        res_V_data_8_V_full_n,
        res_V_data_8_V_write,
        res_V_data_9_V_din,
        res_V_data_9_V_full_n,
        res_V_data_9_V_write,
        res_V_data_10_V_din,
        res_V_data_10_V_full_n,
        res_V_data_10_V_write,
        res_V_data_11_V_din,
        res_V_data_11_V_full_n,
        res_V_data_11_V_write,
        res_V_data_12_V_din,
        res_V_data_12_V_full_n,
        res_V_data_12_V_write,
        res_V_data_13_V_din,
        res_V_data_13_V_full_n,
        res_V_data_13_V_write,
        res_V_data_14_V_din,
        res_V_data_14_V_full_n,
        res_V_data_14_V_write,
        res_V_data_15_V_din,
        res_V_data_15_V_full_n,
        res_V_data_15_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [2:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [2:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [2:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [2:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [2:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [2:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [2:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [2:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
input  [2:0] data_V_data_8_V_dout;
input   data_V_data_8_V_empty_n;
output   data_V_data_8_V_read;
input  [2:0] data_V_data_9_V_dout;
input   data_V_data_9_V_empty_n;
output   data_V_data_9_V_read;
input  [2:0] data_V_data_10_V_dout;
input   data_V_data_10_V_empty_n;
output   data_V_data_10_V_read;
input  [2:0] data_V_data_11_V_dout;
input   data_V_data_11_V_empty_n;
output   data_V_data_11_V_read;
input  [2:0] data_V_data_12_V_dout;
input   data_V_data_12_V_empty_n;
output   data_V_data_12_V_read;
input  [2:0] data_V_data_13_V_dout;
input   data_V_data_13_V_empty_n;
output   data_V_data_13_V_read;
input  [2:0] data_V_data_14_V_dout;
input   data_V_data_14_V_empty_n;
output   data_V_data_14_V_read;
input  [2:0] data_V_data_15_V_dout;
input   data_V_data_15_V_empty_n;
output   data_V_data_15_V_read;
output  [2:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [2:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [2:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [2:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [2:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [2:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [2:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [2:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;
output  [2:0] res_V_data_8_V_din;
input   res_V_data_8_V_full_n;
output   res_V_data_8_V_write;
output  [2:0] res_V_data_9_V_din;
input   res_V_data_9_V_full_n;
output   res_V_data_9_V_write;
output  [2:0] res_V_data_10_V_din;
input   res_V_data_10_V_full_n;
output   res_V_data_10_V_write;
output  [2:0] res_V_data_11_V_din;
input   res_V_data_11_V_full_n;
output   res_V_data_11_V_write;
output  [2:0] res_V_data_12_V_din;
input   res_V_data_12_V_full_n;
output   res_V_data_12_V_write;
output  [2:0] res_V_data_13_V_din;
input   res_V_data_13_V_full_n;
output   res_V_data_13_V_write;
output  [2:0] res_V_data_14_V_din;
input   res_V_data_14_V_full_n;
output   res_V_data_14_V_write;
output  [2:0] res_V_data_15_V_din;
input   res_V_data_15_V_full_n;
output   res_V_data_15_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg data_V_data_8_V_read;
reg data_V_data_9_V_read;
reg data_V_data_10_V_read;
reg data_V_data_11_V_read;
reg data_V_data_12_V_read;
reg data_V_data_13_V_read;
reg data_V_data_14_V_read;
reg data_V_data_15_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;
reg res_V_data_8_V_write;
reg res_V_data_9_V_write;
reg res_V_data_10_V_write;
reg res_V_data_11_V_write;
reg res_V_data_12_V_write;
reg res_V_data_13_V_write;
reg res_V_data_14_V_write;
reg res_V_data_15_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_1;
reg   [31:0] sX_1;
reg   [31:0] pY_1;
reg   [31:0] sY_1;
reg   [2:0] kernel_data_V_2_16;
reg   [2:0] kernel_data_V_2_17;
reg   [2:0] kernel_data_V_2_18;
reg   [2:0] kernel_data_V_2_19;
reg   [2:0] kernel_data_V_2_20;
reg   [2:0] kernel_data_V_2_21;
reg   [2:0] kernel_data_V_2_22;
reg   [2:0] kernel_data_V_2_23;
reg   [2:0] kernel_data_V_2_24;
reg   [2:0] kernel_data_V_2_25;
reg   [2:0] kernel_data_V_2_26;
reg   [2:0] kernel_data_V_2_27;
reg   [2:0] kernel_data_V_2_28;
reg   [2:0] kernel_data_V_2_29;
reg   [2:0] kernel_data_V_2_30;
reg   [2:0] kernel_data_V_2_31;
reg   [2:0] kernel_data_V_2_48;
reg   [2:0] kernel_data_V_2_49;
reg   [2:0] kernel_data_V_2_50;
reg   [2:0] kernel_data_V_2_51;
reg   [2:0] kernel_data_V_2_52;
reg   [2:0] kernel_data_V_2_53;
reg   [2:0] kernel_data_V_2_54;
reg   [2:0] kernel_data_V_2_55;
reg   [2:0] kernel_data_V_2_56;
reg   [2:0] kernel_data_V_2_57;
reg   [2:0] kernel_data_V_2_58;
reg   [2:0] kernel_data_V_2_59;
reg   [2:0] kernel_data_V_2_60;
reg   [2:0] kernel_data_V_2_61;
reg   [2:0] kernel_data_V_2_62;
reg   [2:0] kernel_data_V_2_63;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln233_reg_1869;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    data_V_data_8_V_blk_n;
reg    data_V_data_9_V_blk_n;
reg    data_V_data_10_V_blk_n;
reg    data_V_data_11_V_blk_n;
reg    data_V_data_12_V_blk_n;
reg    data_V_data_13_V_blk_n;
reg    data_V_data_14_V_blk_n;
reg    data_V_data_15_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] and_ln185_4_reg_1958;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg    res_V_data_8_V_blk_n;
reg    res_V_data_9_V_blk_n;
reg    res_V_data_10_V_blk_n;
reg    res_V_data_11_V_blk_n;
reg    res_V_data_12_V_blk_n;
reg    res_V_data_13_V_blk_n;
reg    res_V_data_14_V_blk_n;
reg    res_V_data_15_V_blk_n;
reg   [9:0] indvar_flatten_reg_304;
wire   [0:0] icmp_ln233_fu_410_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [9:0] add_ln233_fu_416_p2;
reg   [9:0] add_ln233_reg_1873;
reg   [2:0] tmp_data_0_V_reg_1878;
wire    io_acc_block_signal_op45;
reg    ap_block_state3_pp0_stage1_iter0;
wire    io_acc_block_signal_op324;
reg    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [2:0] tmp_data_1_V_reg_1883;
reg   [2:0] tmp_data_2_V_reg_1888;
reg   [2:0] tmp_data_3_V_reg_1893;
reg   [2:0] tmp_data_4_V_reg_1898;
reg   [2:0] tmp_data_5_V_reg_1903;
reg   [2:0] tmp_data_6_V_reg_1908;
reg   [2:0] tmp_data_7_V_reg_1913;
reg   [2:0] tmp_data_8_V_reg_1918;
reg   [2:0] tmp_data_9_V_reg_1923;
reg   [2:0] tmp_data_10_V_reg_1928;
reg   [2:0] tmp_data_11_V_reg_1933;
reg   [2:0] tmp_data_12_V_reg_1938;
reg   [2:0] tmp_data_13_V_reg_1943;
reg   [2:0] tmp_data_14_V_reg_1948;
reg   [2:0] tmp_data_15_V_reg_1953;
wire   [0:0] and_ln185_4_fu_538_p2;
wire   [0:0] icmp_ln203_fu_544_p2;
reg   [0:0] icmp_ln203_reg_1962;
wire   [31:0] select_ln218_fu_568_p3;
reg   [31:0] select_ln218_reg_1966;
wire   [0:0] icmp_ln207_fu_588_p2;
reg   [0:0] icmp_ln207_reg_1971;
wire   [31:0] select_ln213_fu_612_p3;
reg   [31:0] select_ln213_reg_1975;
wire   [2:0] select_ln86_fu_1240_p3;
reg   [2:0] select_ln86_reg_1980;
wire   [2:0] select_ln86_56_fu_1254_p3;
reg   [2:0] select_ln86_56_reg_1986;
wire   [2:0] select_ln86_58_fu_1268_p3;
reg   [2:0] select_ln86_58_reg_1992;
wire   [2:0] select_ln86_59_fu_1282_p3;
reg   [2:0] select_ln86_59_reg_1998;
wire   [2:0] select_ln86_61_fu_1296_p3;
reg   [2:0] select_ln86_61_reg_2004;
wire   [2:0] select_ln86_62_fu_1310_p3;
reg   [2:0] select_ln86_62_reg_2010;
wire   [2:0] select_ln86_64_fu_1324_p3;
reg   [2:0] select_ln86_64_reg_2016;
wire   [2:0] select_ln86_65_fu_1338_p3;
reg   [2:0] select_ln86_65_reg_2022;
wire   [2:0] select_ln86_67_fu_1352_p3;
reg   [2:0] select_ln86_67_reg_2028;
wire   [2:0] select_ln86_68_fu_1366_p3;
reg   [2:0] select_ln86_68_reg_2034;
wire   [2:0] select_ln86_70_fu_1380_p3;
reg   [2:0] select_ln86_70_reg_2040;
wire   [2:0] select_ln86_71_fu_1394_p3;
reg   [2:0] select_ln86_71_reg_2046;
wire   [2:0] select_ln86_73_fu_1408_p3;
reg   [2:0] select_ln86_73_reg_2052;
wire   [2:0] select_ln86_74_fu_1422_p3;
reg   [2:0] select_ln86_74_reg_2058;
wire   [2:0] select_ln86_76_fu_1436_p3;
reg   [2:0] select_ln86_76_reg_2064;
wire   [2:0] select_ln86_77_fu_1450_p3;
reg   [2:0] select_ln86_77_reg_2070;
wire   [2:0] select_ln86_79_fu_1464_p3;
reg   [2:0] select_ln86_79_reg_2076;
wire   [2:0] select_ln86_80_fu_1478_p3;
reg   [2:0] select_ln86_80_reg_2082;
wire   [2:0] select_ln86_82_fu_1492_p3;
reg   [2:0] select_ln86_82_reg_2088;
wire   [2:0] select_ln86_83_fu_1506_p3;
reg   [2:0] select_ln86_83_reg_2094;
wire   [2:0] select_ln86_85_fu_1520_p3;
reg   [2:0] select_ln86_85_reg_2100;
wire   [2:0] select_ln86_86_fu_1534_p3;
reg   [2:0] select_ln86_86_reg_2106;
wire   [2:0] select_ln86_88_fu_1548_p3;
reg   [2:0] select_ln86_88_reg_2112;
wire   [2:0] select_ln86_89_fu_1562_p3;
reg   [2:0] select_ln86_89_reg_2118;
wire   [2:0] select_ln86_91_fu_1576_p3;
reg   [2:0] select_ln86_91_reg_2124;
wire   [2:0] select_ln86_92_fu_1590_p3;
reg   [2:0] select_ln86_92_reg_2130;
wire   [2:0] select_ln86_94_fu_1604_p3;
reg   [2:0] select_ln86_94_reg_2136;
wire   [2:0] select_ln86_95_fu_1618_p3;
reg   [2:0] select_ln86_95_reg_2142;
wire   [2:0] select_ln86_97_fu_1632_p3;
reg   [2:0] select_ln86_97_reg_2148;
wire   [2:0] select_ln86_98_fu_1646_p3;
reg   [2:0] select_ln86_98_reg_2154;
wire   [2:0] select_ln86_100_fu_1660_p3;
reg   [2:0] select_ln86_100_reg_2160;
wire   [2:0] select_ln86_101_fu_1674_p3;
reg   [2:0] select_ln86_101_reg_2166;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ready;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_0;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_1;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_2;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_3;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_4;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_5;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_6;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_7;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_8;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_9;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_10;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_11;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_12;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_13;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_14;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_15;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_16;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_17;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_18;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_19;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_20;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_21;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_22;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_23;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_24;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_25;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_26;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_27;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_28;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_29;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_30;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_31;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_32;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_33;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_34;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_35;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_36;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_37;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_38;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_39;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_40;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_41;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_42;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_43;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_44;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_45;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_46;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_47;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_48;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_49;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_50;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_51;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_52;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_53;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_54;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_55;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_56;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_57;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_58;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_59;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_60;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_61;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_62;
wire   [2:0] call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_63;
reg    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call54;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call54;
wire    ap_block_pp0_stage0_11001_ignoreCallOp128;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_308_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315;
reg    call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg;
wire   [31:0] add_ln216_fu_550_p2;
wire   [31:0] add_ln211_fu_594_p2;
reg   [31:0] ap_sig_allocacmp_sY_1_load;
reg    ap_block_pp0_stage1_01001;
wire   [0:0] icmp_ln185_fu_490_p2;
wire   [0:0] icmp_ln185_4_fu_500_p2;
wire   [0:0] icmp_ln185_5_fu_510_p2;
wire   [0:0] icmp_ln185_6_fu_520_p2;
wire   [0:0] and_ln185_3_fu_532_p2;
wire   [0:0] and_ln185_fu_526_p2;
wire   [31:0] add_ln218_fu_562_p2;
wire   [31:0] add_ln213_fu_606_p2;
wire   [0:0] icmp_ln1496_fu_1234_p2;
wire   [0:0] icmp_ln1496_56_fu_1248_p2;
wire   [0:0] icmp_ln1496_58_fu_1262_p2;
wire   [0:0] icmp_ln1496_59_fu_1276_p2;
wire   [0:0] icmp_ln1496_61_fu_1290_p2;
wire   [0:0] icmp_ln1496_62_fu_1304_p2;
wire   [0:0] icmp_ln1496_64_fu_1318_p2;
wire   [0:0] icmp_ln1496_65_fu_1332_p2;
wire   [0:0] icmp_ln1496_67_fu_1346_p2;
wire   [0:0] icmp_ln1496_68_fu_1360_p2;
wire   [0:0] icmp_ln1496_70_fu_1374_p2;
wire   [0:0] icmp_ln1496_71_fu_1388_p2;
wire   [0:0] icmp_ln1496_73_fu_1402_p2;
wire   [0:0] icmp_ln1496_74_fu_1416_p2;
wire   [0:0] icmp_ln1496_76_fu_1430_p2;
wire   [0:0] icmp_ln1496_77_fu_1444_p2;
wire   [0:0] icmp_ln1496_79_fu_1458_p2;
wire   [0:0] icmp_ln1496_80_fu_1472_p2;
wire   [0:0] icmp_ln1496_82_fu_1486_p2;
wire   [0:0] icmp_ln1496_83_fu_1500_p2;
wire   [0:0] icmp_ln1496_85_fu_1514_p2;
wire   [0:0] icmp_ln1496_86_fu_1528_p2;
wire   [0:0] icmp_ln1496_88_fu_1542_p2;
wire   [0:0] icmp_ln1496_89_fu_1556_p2;
wire   [0:0] icmp_ln1496_91_fu_1570_p2;
wire   [0:0] icmp_ln1496_92_fu_1584_p2;
wire   [0:0] icmp_ln1496_94_fu_1598_p2;
wire   [0:0] icmp_ln1496_95_fu_1612_p2;
wire   [0:0] icmp_ln1496_97_fu_1626_p2;
wire   [0:0] icmp_ln1496_98_fu_1640_p2;
wire   [0:0] icmp_ln1496_100_fu_1654_p2;
wire   [0:0] icmp_ln1496_101_fu_1668_p2;
wire   [0:0] icmp_ln1496_57_fu_1687_p2;
wire   [0:0] icmp_ln1496_60_fu_1698_p2;
wire   [0:0] icmp_ln1496_63_fu_1709_p2;
wire   [0:0] icmp_ln1496_66_fu_1720_p2;
wire   [0:0] icmp_ln1496_69_fu_1731_p2;
wire   [0:0] icmp_ln1496_72_fu_1742_p2;
wire   [0:0] icmp_ln1496_75_fu_1753_p2;
wire   [0:0] icmp_ln1496_78_fu_1764_p2;
wire   [0:0] icmp_ln1496_81_fu_1775_p2;
wire   [0:0] icmp_ln1496_84_fu_1786_p2;
wire   [0:0] icmp_ln1496_87_fu_1797_p2;
wire   [0:0] icmp_ln1496_90_fu_1808_p2;
wire   [0:0] icmp_ln1496_93_fu_1819_p2;
wire   [0:0] icmp_ln1496_96_fu_1830_p2;
wire   [0:0] icmp_ln1496_99_fu_1841_p2;
wire   [0:0] icmp_ln1496_102_fu_1852_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_585;
reg    ap_condition_812;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 pX_1 = 32'd0;
#0 sX_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 sY_1 = 32'd0;
#0 kernel_data_V_2_16 = 3'd0;
#0 kernel_data_V_2_17 = 3'd0;
#0 kernel_data_V_2_18 = 3'd0;
#0 kernel_data_V_2_19 = 3'd0;
#0 kernel_data_V_2_20 = 3'd0;
#0 kernel_data_V_2_21 = 3'd0;
#0 kernel_data_V_2_22 = 3'd0;
#0 kernel_data_V_2_23 = 3'd0;
#0 kernel_data_V_2_24 = 3'd0;
#0 kernel_data_V_2_25 = 3'd0;
#0 kernel_data_V_2_26 = 3'd0;
#0 kernel_data_V_2_27 = 3'd0;
#0 kernel_data_V_2_28 = 3'd0;
#0 kernel_data_V_2_29 = 3'd0;
#0 kernel_data_V_2_30 = 3'd0;
#0 kernel_data_V_2_31 = 3'd0;
#0 kernel_data_V_2_48 = 3'd0;
#0 kernel_data_V_2_49 = 3'd0;
#0 kernel_data_V_2_50 = 3'd0;
#0 kernel_data_V_2_51 = 3'd0;
#0 kernel_data_V_2_52 = 3'd0;
#0 kernel_data_V_2_53 = 3'd0;
#0 kernel_data_V_2_54 = 3'd0;
#0 kernel_data_V_2_55 = 3'd0;
#0 kernel_data_V_2_56 = 3'd0;
#0 kernel_data_V_2_57 = 3'd0;
#0 kernel_data_V_2_58 = 3'd0;
#0 kernel_data_V_2_59 = 3'd0;
#0 kernel_data_V_2_60 = 3'd0;
#0 kernel_data_V_2_61 = 3'd0;
#0 kernel_data_V_2_62 = 3'd0;
#0 kernel_data_V_2_63 = 3'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_16u_config5_s call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_1878),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_1883),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_1888),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_1893),
    .in_elem_data_4_V_read(tmp_data_4_V_reg_1898),
    .in_elem_data_5_V_read(tmp_data_5_V_reg_1903),
    .in_elem_data_6_V_read(tmp_data_6_V_reg_1908),
    .in_elem_data_7_V_read(tmp_data_7_V_reg_1913),
    .in_elem_data_8_V_read(tmp_data_8_V_reg_1918),
    .in_elem_data_9_V_read(tmp_data_9_V_reg_1923),
    .in_elem_data_10_V_read(tmp_data_10_V_reg_1928),
    .in_elem_data_11_V_read(tmp_data_11_V_reg_1933),
    .in_elem_data_12_V_read(tmp_data_12_V_reg_1938),
    .in_elem_data_13_V_read(tmp_data_13_V_reg_1943),
    .in_elem_data_14_V_read(tmp_data_14_V_reg_1948),
    .in_elem_data_15_V_read(tmp_data_15_V_reg_1953),
    .kernel_window_16_V_read(kernel_data_V_2_16),
    .kernel_window_17_V_read(kernel_data_V_2_17),
    .kernel_window_18_V_read(kernel_data_V_2_18),
    .kernel_window_19_V_read(kernel_data_V_2_19),
    .kernel_window_20_V_read(kernel_data_V_2_20),
    .kernel_window_21_V_read(kernel_data_V_2_21),
    .kernel_window_22_V_read(kernel_data_V_2_22),
    .kernel_window_23_V_read(kernel_data_V_2_23),
    .kernel_window_24_V_read(kernel_data_V_2_24),
    .kernel_window_25_V_read(kernel_data_V_2_25),
    .kernel_window_26_V_read(kernel_data_V_2_26),
    .kernel_window_27_V_read(kernel_data_V_2_27),
    .kernel_window_28_V_read(kernel_data_V_2_28),
    .kernel_window_29_V_read(kernel_data_V_2_29),
    .kernel_window_30_V_read(kernel_data_V_2_30),
    .kernel_window_31_V_read(kernel_data_V_2_31),
    .kernel_window_48_V_read(kernel_data_V_2_48),
    .kernel_window_49_V_read(kernel_data_V_2_49),
    .kernel_window_50_V_read(kernel_data_V_2_50),
    .kernel_window_51_V_read(kernel_data_V_2_51),
    .kernel_window_52_V_read(kernel_data_V_2_52),
    .kernel_window_53_V_read(kernel_data_V_2_53),
    .kernel_window_54_V_read(kernel_data_V_2_54),
    .kernel_window_55_V_read(kernel_data_V_2_55),
    .kernel_window_56_V_read(kernel_data_V_2_56),
    .kernel_window_57_V_read(kernel_data_V_2_57),
    .kernel_window_58_V_read(kernel_data_V_2_58),
    .kernel_window_59_V_read(kernel_data_V_2_59),
    .kernel_window_60_V_read(kernel_data_V_2_60),
    .kernel_window_61_V_read(kernel_data_V_2_61),
    .kernel_window_62_V_read(kernel_data_V_2_62),
    .kernel_window_63_V_read(kernel_data_V_2_63),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_31),
    .ap_return_32(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_32),
    .ap_return_33(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_33),
    .ap_return_34(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_34),
    .ap_return_35(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_35),
    .ap_return_36(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_36),
    .ap_return_37(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_37),
    .ap_return_38(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_38),
    .ap_return_39(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_39),
    .ap_return_40(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_40),
    .ap_return_41(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_41),
    .ap_return_42(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_42),
    .ap_return_43(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_43),
    .ap_return_44(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_44),
    .ap_return_45(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_45),
    .ap_return_46(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_46),
    .ap_return_47(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_47),
    .ap_return_48(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_48),
    .ap_return_49(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_49),
    .ap_return_50(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_50),
    .ap_return_51(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_51),
    .ap_return_52(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_52),
    .ap_return_53(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_53),
    .ap_return_54(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_54),
    .ap_return_55(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_55),
    .ap_return_56(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_56),
    .ap_return_57(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_57),
    .ap_return_58(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_58),
    .ap_return_59(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_59),
    .ap_return_60(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_60),
    .ap_return_61(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_61),
    .ap_return_62(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_62),
    .ap_return_63(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_63),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln207_fu_588_p2 == 1'd1) & (icmp_ln203_fu_544_p2 == 1'd1) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_1962 == 1'd1) & (icmp_ln207_reg_1971 == 1'd0) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315 <= select_ln213_reg_1975;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_304 <= add_ln233_reg_1873;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_304 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_585)) begin
        if ((icmp_ln203_fu_544_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln203_fu_544_p2 == 1'd0)) begin
            pX_1 <= add_ln216_fu_550_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_812)) begin
        if ((icmp_ln207_fu_588_p2 == 1'd1)) begin
            pY_1 <= 32'd0;
        end else if ((icmp_ln207_fu_588_p2 == 1'd0)) begin
            pY_1 <= add_ln211_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_1962 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        sX_1 <= select_ln218_reg_1966;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_fu_544_p2 == 1'd1) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sX_1 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln233_reg_1873 <= add_ln233_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln185_4_reg_1958 <= and_ln185_4_fu_538_p2;
        icmp_ln203_reg_1962 <= icmp_ln203_fu_544_p2;
        tmp_data_0_V_reg_1878 <= data_V_data_0_V_dout;
        tmp_data_10_V_reg_1928 <= data_V_data_10_V_dout;
        tmp_data_11_V_reg_1933 <= data_V_data_11_V_dout;
        tmp_data_12_V_reg_1938 <= data_V_data_12_V_dout;
        tmp_data_13_V_reg_1943 <= data_V_data_13_V_dout;
        tmp_data_14_V_reg_1948 <= data_V_data_14_V_dout;
        tmp_data_15_V_reg_1953 <= data_V_data_15_V_dout;
        tmp_data_1_V_reg_1883 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_1888 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_1893 <= data_V_data_3_V_dout;
        tmp_data_4_V_reg_1898 <= data_V_data_4_V_dout;
        tmp_data_5_V_reg_1903 <= data_V_data_5_V_dout;
        tmp_data_6_V_reg_1908 <= data_V_data_6_V_dout;
        tmp_data_7_V_reg_1913 <= data_V_data_7_V_dout;
        tmp_data_8_V_reg_1918 <= data_V_data_8_V_dout;
        tmp_data_9_V_reg_1923 <= data_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_fu_544_p2 == 1'd1) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln207_reg_1971 <= icmp_ln207_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln233_reg_1869 <= icmp_ln233_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_data_V_2_16 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_32;
        kernel_data_V_2_17 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_33;
        kernel_data_V_2_18 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_34;
        kernel_data_V_2_19 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_35;
        kernel_data_V_2_20 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_36;
        kernel_data_V_2_21 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_37;
        kernel_data_V_2_22 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_38;
        kernel_data_V_2_23 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_39;
        kernel_data_V_2_24 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_40;
        kernel_data_V_2_25 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_41;
        kernel_data_V_2_26 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_42;
        kernel_data_V_2_27 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_43;
        kernel_data_V_2_28 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_44;
        kernel_data_V_2_29 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_45;
        kernel_data_V_2_30 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_46;
        kernel_data_V_2_31 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_47;
        kernel_data_V_2_48 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_48;
        kernel_data_V_2_49 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_49;
        kernel_data_V_2_50 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_50;
        kernel_data_V_2_51 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_51;
        kernel_data_V_2_52 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_52;
        kernel_data_V_2_53 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_53;
        kernel_data_V_2_54 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_54;
        kernel_data_V_2_55 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_55;
        kernel_data_V_2_56 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_56;
        kernel_data_V_2_57 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_57;
        kernel_data_V_2_58 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_58;
        kernel_data_V_2_59 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_59;
        kernel_data_V_2_60 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_60;
        kernel_data_V_2_61 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_61;
        kernel_data_V_2_62 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_62;
        kernel_data_V_2_63 <= call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_63;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_reg_1962 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sY_1 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_fu_544_p2 == 1'd1) & (icmp_ln207_fu_588_p2 == 1'd0) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln213_reg_1975 <= select_ln213_fu_612_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_fu_544_p2 == 1'd0) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln218_reg_1966 <= select_ln218_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_4_reg_1958) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln86_100_reg_2160 <= select_ln86_100_fu_1660_p3;
        select_ln86_101_reg_2166 <= select_ln86_101_fu_1674_p3;
        select_ln86_56_reg_1986 <= select_ln86_56_fu_1254_p3;
        select_ln86_58_reg_1992 <= select_ln86_58_fu_1268_p3;
        select_ln86_59_reg_1998 <= select_ln86_59_fu_1282_p3;
        select_ln86_61_reg_2004 <= select_ln86_61_fu_1296_p3;
        select_ln86_62_reg_2010 <= select_ln86_62_fu_1310_p3;
        select_ln86_64_reg_2016 <= select_ln86_64_fu_1324_p3;
        select_ln86_65_reg_2022 <= select_ln86_65_fu_1338_p3;
        select_ln86_67_reg_2028 <= select_ln86_67_fu_1352_p3;
        select_ln86_68_reg_2034 <= select_ln86_68_fu_1366_p3;
        select_ln86_70_reg_2040 <= select_ln86_70_fu_1380_p3;
        select_ln86_71_reg_2046 <= select_ln86_71_fu_1394_p3;
        select_ln86_73_reg_2052 <= select_ln86_73_fu_1408_p3;
        select_ln86_74_reg_2058 <= select_ln86_74_fu_1422_p3;
        select_ln86_76_reg_2064 <= select_ln86_76_fu_1436_p3;
        select_ln86_77_reg_2070 <= select_ln86_77_fu_1450_p3;
        select_ln86_79_reg_2076 <= select_ln86_79_fu_1464_p3;
        select_ln86_80_reg_2082 <= select_ln86_80_fu_1478_p3;
        select_ln86_82_reg_2088 <= select_ln86_82_fu_1492_p3;
        select_ln86_83_reg_2094 <= select_ln86_83_fu_1506_p3;
        select_ln86_85_reg_2100 <= select_ln86_85_fu_1520_p3;
        select_ln86_86_reg_2106 <= select_ln86_86_fu_1534_p3;
        select_ln86_88_reg_2112 <= select_ln86_88_fu_1548_p3;
        select_ln86_89_reg_2118 <= select_ln86_89_fu_1562_p3;
        select_ln86_91_reg_2124 <= select_ln86_91_fu_1576_p3;
        select_ln86_92_reg_2130 <= select_ln86_92_fu_1590_p3;
        select_ln86_94_reg_2136 <= select_ln86_94_fu_1604_p3;
        select_ln86_95_reg_2142 <= select_ln86_95_fu_1618_p3;
        select_ln86_97_reg_2148 <= select_ln86_97_fu_1632_p3;
        select_ln86_98_reg_2154 <= select_ln86_98_fu_1646_p3;
        select_ln86_reg_1980 <= select_ln86_fu_1240_p3;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_410_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln233_reg_1869 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_308_p4 = add_ln233_reg_1873;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_308_p4 = indvar_flatten_reg_304;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_1962 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_sY_1_load = ap_phi_reg_pp0_iter1_storemerge_i_i_reg_315;
    end else begin
        ap_sig_allocacmp_sY_1_load = sY_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp128) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n;
    end else begin
        data_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_10_V_read = 1'b1;
    end else begin
        data_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n;
    end else begin
        data_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_11_V_read = 1'b1;
    end else begin
        data_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n;
    end else begin
        data_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_12_V_read = 1'b1;
    end else begin
        data_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_13_V_blk_n = data_V_data_13_V_empty_n;
    end else begin
        data_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_13_V_read = 1'b1;
    end else begin
        data_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_14_V_blk_n = data_V_data_14_V_empty_n;
    end else begin
        data_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_14_V_read = 1'b1;
    end else begin
        data_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_15_V_blk_n = data_V_data_15_V_empty_n;
    end else begin
        data_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_15_V_read = 1'b1;
    end else begin
        data_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n;
    end else begin
        data_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_8_V_read = 1'b1;
    end else begin
        data_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_1869 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n;
    end else begin
        data_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_9_V_read = 1'b1;
    end else begin
        data_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n;
    end else begin
        res_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_10_V_write = 1'b1;
    end else begin
        res_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n;
    end else begin
        res_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_11_V_write = 1'b1;
    end else begin
        res_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n;
    end else begin
        res_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_12_V_write = 1'b1;
    end else begin
        res_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_13_V_blk_n = res_V_data_13_V_full_n;
    end else begin
        res_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_13_V_write = 1'b1;
    end else begin
        res_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_14_V_blk_n = res_V_data_14_V_full_n;
    end else begin
        res_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_14_V_write = 1'b1;
    end else begin
        res_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_15_V_blk_n = res_V_data_15_V_full_n;
    end else begin
        res_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_15_V_write = 1'b1;
    end else begin
        res_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n;
    end else begin
        res_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_8_V_write = 1'b1;
    end else begin
        res_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_4_reg_1958) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n;
    end else begin
        res_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_data_9_V_write = 1'b1;
    end else begin
        res_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_410_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln233_fu_410_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_594_p2 = (pY_1 + 32'd1);

assign add_ln213_fu_606_p2 = (ap_sig_allocacmp_sY_1_load + 32'd1);

assign add_ln216_fu_550_p2 = (pX_1 + 32'd1);

assign add_ln218_fu_562_p2 = (sX_1 + 32'd1);

assign add_ln233_fu_416_p2 = (ap_phi_mux_indvar_flatten_phi_fu_308_p4 + 10'd1);

assign and_ln185_3_fu_532_p2 = (icmp_ln185_6_fu_520_p2 & icmp_ln185_5_fu_510_p2);

assign and_ln185_4_fu_538_p2 = (and_ln185_fu_526_p2 & and_ln185_3_fu_532_p2);

assign and_ln185_fu_526_p2 = (icmp_ln185_fu_490_p2 & icmp_ln185_4_fu_500_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp128 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((io_acc_block_signal_op324 == 1'b0) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((io_acc_block_signal_op324 == 1'b0) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((io_acc_block_signal_op324 == 1'b0) & (1'd1 == and_ln185_4_reg_1958) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call54 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((io_acc_block_signal_op45 == 1'b0) & (icmp_ln233_reg_1869 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call54 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage1_iter1 = ((io_acc_block_signal_op324 == 1'b0) & (1'd1 == and_ln185_4_reg_1958));
end

always @ (*) begin
    ap_condition_585 = ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_812 = ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln203_fu_544_p2 == 1'd1) & (icmp_ln233_reg_1869 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_315 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start = call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_start_reg;

assign icmp_ln1496_100_fu_1654_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_15) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_47)) ? 1'b1 : 1'b0);

assign icmp_ln1496_101_fu_1668_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_31) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_63)) ? 1'b1 : 1'b0);

assign icmp_ln1496_102_fu_1852_p2 = (($signed(select_ln86_100_reg_2160) < $signed(select_ln86_101_reg_2166)) ? 1'b1 : 1'b0);

assign icmp_ln1496_56_fu_1248_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_16) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_48)) ? 1'b1 : 1'b0);

assign icmp_ln1496_57_fu_1687_p2 = (($signed(select_ln86_reg_1980) < $signed(select_ln86_56_reg_1986)) ? 1'b1 : 1'b0);

assign icmp_ln1496_58_fu_1262_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_1) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_33)) ? 1'b1 : 1'b0);

assign icmp_ln1496_59_fu_1276_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_17) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_49)) ? 1'b1 : 1'b0);

assign icmp_ln1496_60_fu_1698_p2 = (($signed(select_ln86_58_reg_1992) < $signed(select_ln86_59_reg_1998)) ? 1'b1 : 1'b0);

assign icmp_ln1496_61_fu_1290_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_2) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_34)) ? 1'b1 : 1'b0);

assign icmp_ln1496_62_fu_1304_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_18) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_50)) ? 1'b1 : 1'b0);

assign icmp_ln1496_63_fu_1709_p2 = (($signed(select_ln86_61_reg_2004) < $signed(select_ln86_62_reg_2010)) ? 1'b1 : 1'b0);

assign icmp_ln1496_64_fu_1318_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_3) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_35)) ? 1'b1 : 1'b0);

assign icmp_ln1496_65_fu_1332_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_19) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_51)) ? 1'b1 : 1'b0);

assign icmp_ln1496_66_fu_1720_p2 = (($signed(select_ln86_64_reg_2016) < $signed(select_ln86_65_reg_2022)) ? 1'b1 : 1'b0);

assign icmp_ln1496_67_fu_1346_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_4) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_36)) ? 1'b1 : 1'b0);

assign icmp_ln1496_68_fu_1360_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_20) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_52)) ? 1'b1 : 1'b0);

assign icmp_ln1496_69_fu_1731_p2 = (($signed(select_ln86_67_reg_2028) < $signed(select_ln86_68_reg_2034)) ? 1'b1 : 1'b0);

assign icmp_ln1496_70_fu_1374_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_5) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_37)) ? 1'b1 : 1'b0);

assign icmp_ln1496_71_fu_1388_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_21) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_53)) ? 1'b1 : 1'b0);

assign icmp_ln1496_72_fu_1742_p2 = (($signed(select_ln86_70_reg_2040) < $signed(select_ln86_71_reg_2046)) ? 1'b1 : 1'b0);

assign icmp_ln1496_73_fu_1402_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_6) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_38)) ? 1'b1 : 1'b0);

assign icmp_ln1496_74_fu_1416_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_22) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_54)) ? 1'b1 : 1'b0);

assign icmp_ln1496_75_fu_1753_p2 = (($signed(select_ln86_73_reg_2052) < $signed(select_ln86_74_reg_2058)) ? 1'b1 : 1'b0);

assign icmp_ln1496_76_fu_1430_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_7) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_39)) ? 1'b1 : 1'b0);

assign icmp_ln1496_77_fu_1444_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_23) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_55)) ? 1'b1 : 1'b0);

assign icmp_ln1496_78_fu_1764_p2 = (($signed(select_ln86_76_reg_2064) < $signed(select_ln86_77_reg_2070)) ? 1'b1 : 1'b0);

assign icmp_ln1496_79_fu_1458_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_8) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_40)) ? 1'b1 : 1'b0);

assign icmp_ln1496_80_fu_1472_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_24) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_56)) ? 1'b1 : 1'b0);

assign icmp_ln1496_81_fu_1775_p2 = (($signed(select_ln86_79_reg_2076) < $signed(select_ln86_80_reg_2082)) ? 1'b1 : 1'b0);

assign icmp_ln1496_82_fu_1486_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_9) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_41)) ? 1'b1 : 1'b0);

assign icmp_ln1496_83_fu_1500_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_25) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_57)) ? 1'b1 : 1'b0);

assign icmp_ln1496_84_fu_1786_p2 = (($signed(select_ln86_82_reg_2088) < $signed(select_ln86_83_reg_2094)) ? 1'b1 : 1'b0);

assign icmp_ln1496_85_fu_1514_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_10) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_42)) ? 1'b1 : 1'b0);

assign icmp_ln1496_86_fu_1528_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_26) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_58)) ? 1'b1 : 1'b0);

assign icmp_ln1496_87_fu_1797_p2 = (($signed(select_ln86_85_reg_2100) < $signed(select_ln86_86_reg_2106)) ? 1'b1 : 1'b0);

assign icmp_ln1496_88_fu_1542_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_11) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_43)) ? 1'b1 : 1'b0);

assign icmp_ln1496_89_fu_1556_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_27) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_59)) ? 1'b1 : 1'b0);

assign icmp_ln1496_90_fu_1808_p2 = (($signed(select_ln86_88_reg_2112) < $signed(select_ln86_89_reg_2118)) ? 1'b1 : 1'b0);

assign icmp_ln1496_91_fu_1570_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_12) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_44)) ? 1'b1 : 1'b0);

assign icmp_ln1496_92_fu_1584_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_28) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_60)) ? 1'b1 : 1'b0);

assign icmp_ln1496_93_fu_1819_p2 = (($signed(select_ln86_91_reg_2124) < $signed(select_ln86_92_reg_2130)) ? 1'b1 : 1'b0);

assign icmp_ln1496_94_fu_1598_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_13) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_45)) ? 1'b1 : 1'b0);

assign icmp_ln1496_95_fu_1612_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_29) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_61)) ? 1'b1 : 1'b0);

assign icmp_ln1496_96_fu_1830_p2 = (($signed(select_ln86_94_reg_2136) < $signed(select_ln86_95_reg_2142)) ? 1'b1 : 1'b0);

assign icmp_ln1496_97_fu_1626_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_14) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_46)) ? 1'b1 : 1'b0);

assign icmp_ln1496_98_fu_1640_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_30) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_62)) ? 1'b1 : 1'b0);

assign icmp_ln1496_99_fu_1841_p2 = (($signed(select_ln86_97_reg_2148) < $signed(select_ln86_98_reg_2154)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_1234_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_0) < $signed(call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_32)) ? 1'b1 : 1'b0);

assign icmp_ln185_4_fu_500_p2 = ((ap_sig_allocacmp_sY_1_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_5_fu_510_p2 = (($signed(pY_1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_6_fu_520_p2 = (($signed(pX_1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_490_p2 = ((sX_1 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_544_p2 = ((pX_1 == 32'd25) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_588_p2 = ((pY_1 == 32'd25) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_410_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_308_p4 == 10'd676) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op324 = (res_V_data_9_V_full_n & res_V_data_8_V_full_n & res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_15_V_full_n & res_V_data_14_V_full_n & res_V_data_13_V_full_n & res_V_data_12_V_full_n & res_V_data_11_V_full_n & res_V_data_10_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op45 = (data_V_data_9_V_empty_n & data_V_data_8_V_empty_n & data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_15_V_empty_n & data_V_data_14_V_empty_n & data_V_data_13_V_empty_n & data_V_data_12_V_empty_n & data_V_data_11_V_empty_n & data_V_data_10_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = ((icmp_ln1496_57_fu_1687_p2[0:0] === 1'b1) ? select_ln86_56_reg_1986 : select_ln86_reg_1980);

assign res_V_data_10_V_din = ((icmp_ln1496_87_fu_1797_p2[0:0] === 1'b1) ? select_ln86_86_reg_2106 : select_ln86_85_reg_2100);

assign res_V_data_11_V_din = ((icmp_ln1496_90_fu_1808_p2[0:0] === 1'b1) ? select_ln86_89_reg_2118 : select_ln86_88_reg_2112);

assign res_V_data_12_V_din = ((icmp_ln1496_93_fu_1819_p2[0:0] === 1'b1) ? select_ln86_92_reg_2130 : select_ln86_91_reg_2124);

assign res_V_data_13_V_din = ((icmp_ln1496_96_fu_1830_p2[0:0] === 1'b1) ? select_ln86_95_reg_2142 : select_ln86_94_reg_2136);

assign res_V_data_14_V_din = ((icmp_ln1496_99_fu_1841_p2[0:0] === 1'b1) ? select_ln86_98_reg_2154 : select_ln86_97_reg_2148);

assign res_V_data_15_V_din = ((icmp_ln1496_102_fu_1852_p2[0:0] === 1'b1) ? select_ln86_101_reg_2166 : select_ln86_100_reg_2160);

assign res_V_data_1_V_din = ((icmp_ln1496_60_fu_1698_p2[0:0] === 1'b1) ? select_ln86_59_reg_1998 : select_ln86_58_reg_1992);

assign res_V_data_2_V_din = ((icmp_ln1496_63_fu_1709_p2[0:0] === 1'b1) ? select_ln86_62_reg_2010 : select_ln86_61_reg_2004);

assign res_V_data_3_V_din = ((icmp_ln1496_66_fu_1720_p2[0:0] === 1'b1) ? select_ln86_65_reg_2022 : select_ln86_64_reg_2016);

assign res_V_data_4_V_din = ((icmp_ln1496_69_fu_1731_p2[0:0] === 1'b1) ? select_ln86_68_reg_2034 : select_ln86_67_reg_2028);

assign res_V_data_5_V_din = ((icmp_ln1496_72_fu_1742_p2[0:0] === 1'b1) ? select_ln86_71_reg_2046 : select_ln86_70_reg_2040);

assign res_V_data_6_V_din = ((icmp_ln1496_75_fu_1753_p2[0:0] === 1'b1) ? select_ln86_74_reg_2058 : select_ln86_73_reg_2052);

assign res_V_data_7_V_din = ((icmp_ln1496_78_fu_1764_p2[0:0] === 1'b1) ? select_ln86_77_reg_2070 : select_ln86_76_reg_2064);

assign res_V_data_8_V_din = ((icmp_ln1496_81_fu_1775_p2[0:0] === 1'b1) ? select_ln86_80_reg_2082 : select_ln86_79_reg_2076);

assign res_V_data_9_V_din = ((icmp_ln1496_84_fu_1786_p2[0:0] === 1'b1) ? select_ln86_83_reg_2094 : select_ln86_82_reg_2088);

assign select_ln213_fu_612_p3 = ((icmp_ln185_4_fu_500_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_606_p2);

assign select_ln218_fu_568_p3 = ((icmp_ln185_fu_490_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_562_p2);

assign select_ln86_100_fu_1660_p3 = ((icmp_ln1496_100_fu_1654_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_47 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_15);

assign select_ln86_101_fu_1674_p3 = ((icmp_ln1496_101_fu_1668_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_63 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_31);

assign select_ln86_56_fu_1254_p3 = ((icmp_ln1496_56_fu_1248_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_48 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_16);

assign select_ln86_58_fu_1268_p3 = ((icmp_ln1496_58_fu_1262_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_33 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_1);

assign select_ln86_59_fu_1282_p3 = ((icmp_ln1496_59_fu_1276_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_49 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_17);

assign select_ln86_61_fu_1296_p3 = ((icmp_ln1496_61_fu_1290_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_34 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_2);

assign select_ln86_62_fu_1310_p3 = ((icmp_ln1496_62_fu_1304_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_50 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_18);

assign select_ln86_64_fu_1324_p3 = ((icmp_ln1496_64_fu_1318_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_35 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_3);

assign select_ln86_65_fu_1338_p3 = ((icmp_ln1496_65_fu_1332_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_51 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_19);

assign select_ln86_67_fu_1352_p3 = ((icmp_ln1496_67_fu_1346_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_36 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_4);

assign select_ln86_68_fu_1366_p3 = ((icmp_ln1496_68_fu_1360_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_52 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_20);

assign select_ln86_70_fu_1380_p3 = ((icmp_ln1496_70_fu_1374_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_37 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_5);

assign select_ln86_71_fu_1394_p3 = ((icmp_ln1496_71_fu_1388_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_53 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_21);

assign select_ln86_73_fu_1408_p3 = ((icmp_ln1496_73_fu_1402_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_38 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_6);

assign select_ln86_74_fu_1422_p3 = ((icmp_ln1496_74_fu_1416_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_54 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_22);

assign select_ln86_76_fu_1436_p3 = ((icmp_ln1496_76_fu_1430_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_39 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_7);

assign select_ln86_77_fu_1450_p3 = ((icmp_ln1496_77_fu_1444_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_55 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_23);

assign select_ln86_79_fu_1464_p3 = ((icmp_ln1496_79_fu_1458_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_40 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_8);

assign select_ln86_80_fu_1478_p3 = ((icmp_ln1496_80_fu_1472_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_56 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_24);

assign select_ln86_82_fu_1492_p3 = ((icmp_ln1496_82_fu_1486_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_41 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_9);

assign select_ln86_83_fu_1506_p3 = ((icmp_ln1496_83_fu_1500_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_57 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_25);

assign select_ln86_85_fu_1520_p3 = ((icmp_ln1496_85_fu_1514_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_42 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_10);

assign select_ln86_86_fu_1534_p3 = ((icmp_ln1496_86_fu_1528_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_58 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_26);

assign select_ln86_88_fu_1548_p3 = ((icmp_ln1496_88_fu_1542_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_43 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_11);

assign select_ln86_89_fu_1562_p3 = ((icmp_ln1496_89_fu_1556_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_59 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_27);

assign select_ln86_91_fu_1576_p3 = ((icmp_ln1496_91_fu_1570_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_44 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_12);

assign select_ln86_92_fu_1590_p3 = ((icmp_ln1496_92_fu_1584_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_60 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_28);

assign select_ln86_94_fu_1604_p3 = ((icmp_ln1496_94_fu_1598_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_45 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_13);

assign select_ln86_95_fu_1618_p3 = ((icmp_ln1496_95_fu_1612_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_61 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_29);

assign select_ln86_97_fu_1632_p3 = ((icmp_ln1496_97_fu_1626_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_46 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_14);

assign select_ln86_98_fu_1646_p3 = ((icmp_ln1496_98_fu_1640_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_62 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_30);

assign select_ln86_fu_1240_p3 = ((icmp_ln1496_fu_1234_p2[0:0] === 1'b1) ? call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_32 : call_ret_shift_line_buffer_array_ap_fixed_16u_config5_s_fu_326_ap_return_0);

assign start_out = real_start;

endmodule //pooling2d_cl_array_array_ap_fixed_16u_config5_s
