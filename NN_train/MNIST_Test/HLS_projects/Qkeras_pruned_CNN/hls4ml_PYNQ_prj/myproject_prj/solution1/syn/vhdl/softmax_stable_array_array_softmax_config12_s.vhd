-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_softmax_config12_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC;
    res_V_data_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_full_n : IN STD_LOGIC;
    res_V_data_8_V_write : OUT STD_LOGIC;
    res_V_data_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_full_n : IN STD_LOGIC;
    res_V_data_9_V_write : OUT STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_softmax_config12_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op17 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal io_acc_block_signal_op326 : STD_LOGIC;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exp_table8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce0 : STD_LOGIC;
    signal exp_table8_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce1 : STD_LOGIC;
    signal exp_table8_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce2 : STD_LOGIC;
    signal exp_table8_q2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce3 : STD_LOGIC;
    signal exp_table8_q3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce4 : STD_LOGIC;
    signal exp_table8_q4 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce5 : STD_LOGIC;
    signal exp_table8_q5 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce6 : STD_LOGIC;
    signal exp_table8_q6 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce7 : STD_LOGIC;
    signal exp_table8_q7 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce8 : STD_LOGIC;
    signal exp_table8_q8 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_table8_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce9 : STD_LOGIC;
    signal exp_table8_q9 : STD_LOGIC_VECTOR (11 downto 0);
    signal invert_table9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table9_ce0 : STD_LOGIC;
    signal invert_table9_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_array_0_V_reg_1947 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_0_V_reg_1947_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_0_V_reg_1947_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_0_V_reg_1947_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_0_V_reg_1947_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_1954 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_1954_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_1954_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_1954_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_1954_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1961 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1961_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1961_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1961_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1961_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1968 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1968_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1968_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1968_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1968_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1975 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1975_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1975_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1975_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1975_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1982 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1982_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1982_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1982_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1982_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1989 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1989_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1989_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1989_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1989_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1996 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1996_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1996_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1996_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1996_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2003 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2003_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2003_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2003_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2003_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2010 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2010_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2010_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2010_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2010_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_2017 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_2022 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_2027 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_2032 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln85_2_fu_745_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_2_reg_2037 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_5_fu_769_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_5_reg_2043 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_6_fu_781_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_6_reg_2049 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_7_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_reg_2055 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_801_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_reg_2060 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_V_fu_1387_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_2065 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1421_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_2070 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1455_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_2075 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1489_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_2080 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_2080_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1523_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2085 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_2085_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1557_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2090 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2090_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1591_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2095 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2095_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1625_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_2100 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1659_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2105 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2105_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_fu_1693_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2110 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2110_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_reg_2135 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2135_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2135_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2135_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2135_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_0_V_reg_2135_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_1_V_reg_2141_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_2_V_reg_2147_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_7_V_reg_2173_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2189 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2189_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2189_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2189_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_3_V_reg_2189_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2195 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2195_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2195_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2195_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_4_V_reg_2195_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2201 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2201_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2201_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2201_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_5_V_reg_2201_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2207 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2207_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2207_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2207_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_6_V_reg_2207_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2213 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2213_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2213_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2213_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_8_V_reg_2213_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2219 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2219_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2219_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2219_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_res_9_V_reg_2219_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_1741_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_reg_2225 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1_fu_1745_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1_reg_2230 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_3_fu_1753_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_3_reg_2235 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_4_fu_1758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_4_reg_2240 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_6_fu_1766_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_6_reg_2245 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_V_10_reg_2250 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_2260 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_fu_1794_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_0_V_reg_2329 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_2334 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2339 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_2344 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_2349 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_2354 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_2359 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_2364 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_8_V_reg_2369 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_9_V_reg_2374 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln236_fu_1701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_1_fu_1705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_2_fu_1709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_7_fu_1713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_3_fu_1717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_4_fu_1721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_5_fu_1725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_6_fu_1729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_8_fu_1733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln236_9_fu_1737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln244_fu_1790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_302_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_303_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_304_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_306_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_307_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_308_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_309_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_310_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_311_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln85_fu_729_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_1_fu_734_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln85_3_fu_753_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln85_4_fu_758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_6_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln85_7_fu_791_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_8_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_fu_808_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_811_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_814_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_866_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_869_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_875_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_921_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_924_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_fu_938_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_976_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_979_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_27_fu_993_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_985_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_1031_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_1034_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_fu_1048_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_1086_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_1089_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_fu_1103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1095_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1141_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1144_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_fu_1158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1196_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1199_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_35_fu_1213_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_9_fu_1251_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_8_fu_1254_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_fu_1268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_1306_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_9_fu_1309_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_39_fu_1323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1315_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1361_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1371_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1379_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1395_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1405_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1413_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1429_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1439_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1447_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1463_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1473_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1481_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1497_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1507_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1515_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1531_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1541_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1549_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1565_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1575_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1583_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_17_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1599_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1609_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1617_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_18_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1633_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1643_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1651_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1667_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_18_fu_1677_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_1685_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2_fu_1749_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_5_fu_1762_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_7_fu_1771_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_sum_V_fu_1775_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_308_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_302_ce : STD_LOGIC;
    signal grp_fu_303_ce : STD_LOGIC;
    signal grp_fu_304_ce : STD_LOGIC;
    signal grp_fu_305_ce : STD_LOGIC;
    signal grp_fu_306_ce : STD_LOGIC;
    signal grp_fu_307_ce : STD_LOGIC;
    signal grp_fu_308_ce : STD_LOGIC;
    signal grp_fu_309_ce : STD_LOGIC;
    signal grp_fu_310_ce : STD_LOGIC;
    signal grp_fu_311_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_axi_mul_12s_12s_24_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component softmax_stable_array_array_softmax_config12_s_exp_table8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component softmax_stable_array_array_softmax_config12_s_invert_table9 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    exp_table8_U : component softmax_stable_array_array_softmax_config12_s_exp_table8
    generic map (
        DataWidth => 12,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table8_address0,
        ce0 => exp_table8_ce0,
        q0 => exp_table8_q0,
        address1 => exp_table8_address1,
        ce1 => exp_table8_ce1,
        q1 => exp_table8_q1,
        address2 => exp_table8_address2,
        ce2 => exp_table8_ce2,
        q2 => exp_table8_q2,
        address3 => exp_table8_address3,
        ce3 => exp_table8_ce3,
        q3 => exp_table8_q3,
        address4 => exp_table8_address4,
        ce4 => exp_table8_ce4,
        q4 => exp_table8_q4,
        address5 => exp_table8_address5,
        ce5 => exp_table8_ce5,
        q5 => exp_table8_q5,
        address6 => exp_table8_address6,
        ce6 => exp_table8_ce6,
        q6 => exp_table8_q6,
        address7 => exp_table8_address7,
        ce7 => exp_table8_ce7,
        q7 => exp_table8_q7,
        address8 => exp_table8_address8,
        ce8 => exp_table8_ce8,
        q8 => exp_table8_q8,
        address9 => exp_table8_address9,
        ce9 => exp_table8_ce9,
        q9 => exp_table8_q9);

    invert_table9_U : component softmax_stable_array_array_softmax_config12_s_invert_table9
    generic map (
        DataWidth => 12,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table9_address0,
        ce0 => invert_table9_ce0,
        q0 => invert_table9_q0);

    myproject_axi_mul_12s_12s_24_2_1_U1017 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_302_p0,
        din1 => exp_res_0_V_reg_2135_pp0_iter12_reg,
        ce => grp_fu_302_ce,
        dout => grp_fu_302_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1018 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_303_p0,
        din1 => exp_res_2_V_reg_2147_pp0_iter12_reg,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1019 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_304_p0,
        din1 => exp_res_4_V_reg_2195_pp0_iter12_reg,
        ce => grp_fu_304_ce,
        dout => grp_fu_304_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1020 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_305_p0,
        din1 => exp_res_6_V_reg_2207_pp0_iter12_reg,
        ce => grp_fu_305_ce,
        dout => grp_fu_305_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1021 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_306_p0,
        din1 => exp_res_3_V_reg_2189_pp0_iter12_reg,
        ce => grp_fu_306_ce,
        dout => grp_fu_306_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1022 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_307_p0,
        din1 => exp_res_7_V_reg_2173_pp0_iter12_reg,
        ce => grp_fu_307_ce,
        dout => grp_fu_307_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1023 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_308_p0,
        din1 => exp_res_5_V_reg_2201_pp0_iter12_reg,
        ce => grp_fu_308_ce,
        dout => grp_fu_308_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1024 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_309_p0,
        din1 => exp_res_1_V_reg_2141_pp0_iter12_reg,
        ce => grp_fu_309_ce,
        dout => grp_fu_309_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1025 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_310_p0,
        din1 => exp_res_8_V_reg_2213_pp0_iter12_reg,
        ce => grp_fu_310_ce,
        dout => grp_fu_310_p2);

    myproject_axi_mul_12s_12s_24_2_1_U1026 : component myproject_axi_mul_12s_12s_24_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_311_p0,
        din1 => exp_res_9_V_reg_2219_pp0_iter12_reg,
        ce => grp_fu_311_ce,
        dout => grp_fu_311_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_1_reg_2230 <= add_ln703_1_fu_1745_p2;
                add_ln703_3_reg_2235 <= add_ln703_3_fu_1753_p2;
                add_ln703_4_reg_2240 <= add_ln703_4_fu_1758_p2;
                add_ln703_6_reg_2245 <= add_ln703_6_fu_1766_p2;
                add_ln703_reg_2225 <= add_ln703_fu_1741_p2;
                data_array_0_V_reg_1947_pp0_iter2_reg <= data_array_0_V_reg_1947_pp0_iter1_reg;
                data_array_0_V_reg_1947_pp0_iter3_reg <= data_array_0_V_reg_1947_pp0_iter2_reg;
                data_array_0_V_reg_1947_pp0_iter4_reg <= data_array_0_V_reg_1947_pp0_iter3_reg;
                data_array_1_V_reg_1954_pp0_iter2_reg <= data_array_1_V_reg_1954_pp0_iter1_reg;
                data_array_1_V_reg_1954_pp0_iter3_reg <= data_array_1_V_reg_1954_pp0_iter2_reg;
                data_array_1_V_reg_1954_pp0_iter4_reg <= data_array_1_V_reg_1954_pp0_iter3_reg;
                data_array_2_V_reg_1961_pp0_iter2_reg <= data_array_2_V_reg_1961_pp0_iter1_reg;
                data_array_2_V_reg_1961_pp0_iter3_reg <= data_array_2_V_reg_1961_pp0_iter2_reg;
                data_array_2_V_reg_1961_pp0_iter4_reg <= data_array_2_V_reg_1961_pp0_iter3_reg;
                data_array_3_V_reg_1968_pp0_iter2_reg <= data_array_3_V_reg_1968_pp0_iter1_reg;
                data_array_3_V_reg_1968_pp0_iter3_reg <= data_array_3_V_reg_1968_pp0_iter2_reg;
                data_array_3_V_reg_1968_pp0_iter4_reg <= data_array_3_V_reg_1968_pp0_iter3_reg;
                data_array_4_V_reg_1975_pp0_iter2_reg <= data_array_4_V_reg_1975_pp0_iter1_reg;
                data_array_4_V_reg_1975_pp0_iter3_reg <= data_array_4_V_reg_1975_pp0_iter2_reg;
                data_array_4_V_reg_1975_pp0_iter4_reg <= data_array_4_V_reg_1975_pp0_iter3_reg;
                data_array_5_V_reg_1982_pp0_iter2_reg <= data_array_5_V_reg_1982_pp0_iter1_reg;
                data_array_5_V_reg_1982_pp0_iter3_reg <= data_array_5_V_reg_1982_pp0_iter2_reg;
                data_array_5_V_reg_1982_pp0_iter4_reg <= data_array_5_V_reg_1982_pp0_iter3_reg;
                data_array_6_V_reg_1989_pp0_iter2_reg <= data_array_6_V_reg_1989_pp0_iter1_reg;
                data_array_6_V_reg_1989_pp0_iter3_reg <= data_array_6_V_reg_1989_pp0_iter2_reg;
                data_array_6_V_reg_1989_pp0_iter4_reg <= data_array_6_V_reg_1989_pp0_iter3_reg;
                data_array_7_V_reg_1996_pp0_iter2_reg <= data_array_7_V_reg_1996_pp0_iter1_reg;
                data_array_7_V_reg_1996_pp0_iter3_reg <= data_array_7_V_reg_1996_pp0_iter2_reg;
                data_array_7_V_reg_1996_pp0_iter4_reg <= data_array_7_V_reg_1996_pp0_iter3_reg;
                data_array_8_V_reg_2003_pp0_iter2_reg <= data_array_8_V_reg_2003_pp0_iter1_reg;
                data_array_8_V_reg_2003_pp0_iter3_reg <= data_array_8_V_reg_2003_pp0_iter2_reg;
                data_array_8_V_reg_2003_pp0_iter4_reg <= data_array_8_V_reg_2003_pp0_iter3_reg;
                data_array_9_V_reg_2010_pp0_iter2_reg <= data_array_9_V_reg_2010_pp0_iter1_reg;
                data_array_9_V_reg_2010_pp0_iter3_reg <= data_array_9_V_reg_2010_pp0_iter2_reg;
                data_array_9_V_reg_2010_pp0_iter4_reg <= data_array_9_V_reg_2010_pp0_iter3_reg;
                exp_res_0_V_reg_2135_pp0_iter10_reg <= exp_res_0_V_reg_2135_pp0_iter9_reg;
                exp_res_0_V_reg_2135_pp0_iter11_reg <= exp_res_0_V_reg_2135_pp0_iter10_reg;
                exp_res_0_V_reg_2135_pp0_iter12_reg <= exp_res_0_V_reg_2135_pp0_iter11_reg;
                exp_res_0_V_reg_2135_pp0_iter8_reg <= exp_res_0_V_reg_2135;
                exp_res_0_V_reg_2135_pp0_iter9_reg <= exp_res_0_V_reg_2135_pp0_iter8_reg;
                exp_res_1_V_reg_2141_pp0_iter10_reg <= exp_res_1_V_reg_2141_pp0_iter9_reg;
                exp_res_1_V_reg_2141_pp0_iter11_reg <= exp_res_1_V_reg_2141_pp0_iter10_reg;
                exp_res_1_V_reg_2141_pp0_iter12_reg <= exp_res_1_V_reg_2141_pp0_iter11_reg;
                exp_res_1_V_reg_2141_pp0_iter8_reg <= exp_res_1_V_reg_2141;
                exp_res_1_V_reg_2141_pp0_iter9_reg <= exp_res_1_V_reg_2141_pp0_iter8_reg;
                exp_res_2_V_reg_2147_pp0_iter10_reg <= exp_res_2_V_reg_2147_pp0_iter9_reg;
                exp_res_2_V_reg_2147_pp0_iter11_reg <= exp_res_2_V_reg_2147_pp0_iter10_reg;
                exp_res_2_V_reg_2147_pp0_iter12_reg <= exp_res_2_V_reg_2147_pp0_iter11_reg;
                exp_res_2_V_reg_2147_pp0_iter8_reg <= exp_res_2_V_reg_2147;
                exp_res_2_V_reg_2147_pp0_iter9_reg <= exp_res_2_V_reg_2147_pp0_iter8_reg;
                exp_res_3_V_reg_2189_pp0_iter10_reg <= exp_res_3_V_reg_2189_pp0_iter9_reg;
                exp_res_3_V_reg_2189_pp0_iter11_reg <= exp_res_3_V_reg_2189_pp0_iter10_reg;
                exp_res_3_V_reg_2189_pp0_iter12_reg <= exp_res_3_V_reg_2189_pp0_iter11_reg;
                exp_res_3_V_reg_2189_pp0_iter9_reg <= exp_res_3_V_reg_2189;
                exp_res_4_V_reg_2195_pp0_iter10_reg <= exp_res_4_V_reg_2195_pp0_iter9_reg;
                exp_res_4_V_reg_2195_pp0_iter11_reg <= exp_res_4_V_reg_2195_pp0_iter10_reg;
                exp_res_4_V_reg_2195_pp0_iter12_reg <= exp_res_4_V_reg_2195_pp0_iter11_reg;
                exp_res_4_V_reg_2195_pp0_iter9_reg <= exp_res_4_V_reg_2195;
                exp_res_5_V_reg_2201_pp0_iter10_reg <= exp_res_5_V_reg_2201_pp0_iter9_reg;
                exp_res_5_V_reg_2201_pp0_iter11_reg <= exp_res_5_V_reg_2201_pp0_iter10_reg;
                exp_res_5_V_reg_2201_pp0_iter12_reg <= exp_res_5_V_reg_2201_pp0_iter11_reg;
                exp_res_5_V_reg_2201_pp0_iter9_reg <= exp_res_5_V_reg_2201;
                exp_res_6_V_reg_2207_pp0_iter10_reg <= exp_res_6_V_reg_2207_pp0_iter9_reg;
                exp_res_6_V_reg_2207_pp0_iter11_reg <= exp_res_6_V_reg_2207_pp0_iter10_reg;
                exp_res_6_V_reg_2207_pp0_iter12_reg <= exp_res_6_V_reg_2207_pp0_iter11_reg;
                exp_res_6_V_reg_2207_pp0_iter9_reg <= exp_res_6_V_reg_2207;
                exp_res_7_V_reg_2173_pp0_iter10_reg <= exp_res_7_V_reg_2173_pp0_iter9_reg;
                exp_res_7_V_reg_2173_pp0_iter11_reg <= exp_res_7_V_reg_2173_pp0_iter10_reg;
                exp_res_7_V_reg_2173_pp0_iter12_reg <= exp_res_7_V_reg_2173_pp0_iter11_reg;
                exp_res_7_V_reg_2173_pp0_iter8_reg <= exp_res_7_V_reg_2173;
                exp_res_7_V_reg_2173_pp0_iter9_reg <= exp_res_7_V_reg_2173_pp0_iter8_reg;
                exp_res_8_V_reg_2213_pp0_iter10_reg <= exp_res_8_V_reg_2213_pp0_iter9_reg;
                exp_res_8_V_reg_2213_pp0_iter11_reg <= exp_res_8_V_reg_2213_pp0_iter10_reg;
                exp_res_8_V_reg_2213_pp0_iter12_reg <= exp_res_8_V_reg_2213_pp0_iter11_reg;
                exp_res_8_V_reg_2213_pp0_iter9_reg <= exp_res_8_V_reg_2213;
                exp_res_9_V_reg_2219_pp0_iter10_reg <= exp_res_9_V_reg_2219_pp0_iter9_reg;
                exp_res_9_V_reg_2219_pp0_iter11_reg <= exp_res_9_V_reg_2219_pp0_iter10_reg;
                exp_res_9_V_reg_2219_pp0_iter12_reg <= exp_res_9_V_reg_2219_pp0_iter11_reg;
                exp_res_9_V_reg_2219_pp0_iter9_reg <= exp_res_9_V_reg_2219;
                icmp_ln1496_7_reg_2055 <= icmp_ln1496_7_fu_787_p2;
                inv_exp_sum_V_reg_2260 <= invert_table9_q0;
                select_ln85_2_reg_2037 <= select_ln85_2_fu_745_p3;
                select_ln85_5_reg_2043 <= select_ln85_5_fu_769_p3;
                select_ln85_6_reg_2049 <= select_ln85_6_fu_781_p3;
                tmp_data_0_V_reg_2329 <= grp_fu_302_p2(23 downto 8);
                tmp_data_1_V_reg_2334 <= grp_fu_309_p2(23 downto 8);
                tmp_data_2_V_reg_2339 <= grp_fu_303_p2(23 downto 8);
                tmp_data_3_V_reg_2344 <= grp_fu_306_p2(23 downto 8);
                tmp_data_4_V_reg_2349 <= grp_fu_304_p2(23 downto 8);
                tmp_data_5_V_reg_2354 <= grp_fu_308_p2(23 downto 8);
                tmp_data_6_V_reg_2359 <= grp_fu_305_p2(23 downto 8);
                tmp_data_7_V_reg_2364 <= grp_fu_307_p2(23 downto 8);
                tmp_data_8_V_reg_2369 <= grp_fu_310_p2(23 downto 8);
                tmp_data_9_V_reg_2374 <= grp_fu_311_p2(23 downto 8);
                x_max_V_reg_2060 <= x_max_V_fu_801_p3;
                y_V_10_reg_2250 <= exp_sum_V_fu_1775_p2(11 downto 2);
                y_V_1_reg_2070 <= y_V_1_fu_1421_p3;
                y_V_2_reg_2075 <= y_V_2_fu_1455_p3;
                y_V_3_reg_2080 <= y_V_3_fu_1489_p3;
                y_V_3_reg_2080_pp0_iter6_reg <= y_V_3_reg_2080;
                y_V_4_reg_2085 <= y_V_4_fu_1523_p3;
                y_V_4_reg_2085_pp0_iter6_reg <= y_V_4_reg_2085;
                y_V_5_reg_2090 <= y_V_5_fu_1557_p3;
                y_V_5_reg_2090_pp0_iter6_reg <= y_V_5_reg_2090;
                y_V_6_reg_2095 <= y_V_6_fu_1591_p3;
                y_V_6_reg_2095_pp0_iter6_reg <= y_V_6_reg_2095;
                y_V_7_reg_2100 <= y_V_7_fu_1625_p3;
                y_V_8_reg_2105 <= y_V_8_fu_1659_p3;
                y_V_8_reg_2105_pp0_iter6_reg <= y_V_8_reg_2105;
                y_V_9_reg_2110 <= y_V_9_fu_1693_p3;
                y_V_9_reg_2110_pp0_iter6_reg <= y_V_9_reg_2110;
                y_V_reg_2065 <= y_V_fu_1387_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_array_0_V_reg_1947 <= data_V_data_0_V_dout;
                data_array_0_V_reg_1947_pp0_iter1_reg <= data_array_0_V_reg_1947;
                data_array_1_V_reg_1954 <= data_V_data_1_V_dout;
                data_array_1_V_reg_1954_pp0_iter1_reg <= data_array_1_V_reg_1954;
                data_array_2_V_reg_1961 <= data_V_data_2_V_dout;
                data_array_2_V_reg_1961_pp0_iter1_reg <= data_array_2_V_reg_1961;
                data_array_3_V_reg_1968 <= data_V_data_3_V_dout;
                data_array_3_V_reg_1968_pp0_iter1_reg <= data_array_3_V_reg_1968;
                data_array_4_V_reg_1975 <= data_V_data_4_V_dout;
                data_array_4_V_reg_1975_pp0_iter1_reg <= data_array_4_V_reg_1975;
                data_array_5_V_reg_1982 <= data_V_data_5_V_dout;
                data_array_5_V_reg_1982_pp0_iter1_reg <= data_array_5_V_reg_1982;
                data_array_6_V_reg_1989 <= data_V_data_6_V_dout;
                data_array_6_V_reg_1989_pp0_iter1_reg <= data_array_6_V_reg_1989;
                data_array_7_V_reg_1996 <= data_V_data_7_V_dout;
                data_array_7_V_reg_1996_pp0_iter1_reg <= data_array_7_V_reg_1996;
                data_array_8_V_reg_2003 <= data_V_data_8_V_dout;
                data_array_8_V_reg_2003_pp0_iter1_reg <= data_array_8_V_reg_2003;
                data_array_9_V_reg_2010 <= data_V_data_9_V_dout;
                data_array_9_V_reg_2010_pp0_iter1_reg <= data_array_9_V_reg_2010;
                icmp_ln1496_1_reg_2022 <= icmp_ln1496_1_fu_717_p2;
                icmp_ln1496_3_reg_2027 <= icmp_ln1496_3_fu_721_p2;
                icmp_ln1496_4_reg_2032 <= icmp_ln1496_4_fu_725_p2;
                icmp_ln1496_reg_2017 <= icmp_ln1496_fu_713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_reg_2135 <= exp_table8_q0;
                exp_res_1_V_reg_2141 <= exp_table8_q1;
                exp_res_2_V_reg_2147 <= exp_table8_q2;
                exp_res_7_V_reg_2173 <= exp_table8_q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_3_V_reg_2189 <= exp_table8_q4;
                exp_res_4_V_reg_2195 <= exp_table8_q5;
                exp_res_5_V_reg_2201 <= exp_table8_q6;
                exp_res_6_V_reg_2207 <= exp_table8_q7;
                exp_res_8_V_reg_2213 <= exp_table8_q8;
                exp_res_9_V_reg_2219 <= exp_table8_q9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln703_1_fu_1745_p2 <= std_logic_vector(signed(exp_res_7_V_reg_2173) + signed(exp_res_2_V_reg_2147));
    add_ln703_2_fu_1749_p2 <= std_logic_vector(signed(exp_res_3_V_reg_2189) + signed(add_ln703_1_reg_2230));
    add_ln703_3_fu_1753_p2 <= std_logic_vector(unsigned(add_ln703_reg_2225) + unsigned(add_ln703_2_fu_1749_p2));
    add_ln703_4_fu_1758_p2 <= std_logic_vector(signed(exp_res_5_V_reg_2201) + signed(exp_res_6_V_reg_2207));
    add_ln703_5_fu_1762_p2 <= std_logic_vector(signed(exp_res_8_V_reg_2213) + signed(exp_res_9_V_reg_2219));
    add_ln703_6_fu_1766_p2 <= std_logic_vector(signed(exp_res_4_V_reg_2195) + signed(add_ln703_5_fu_1762_p2));
    add_ln703_7_fu_1771_p2 <= std_logic_vector(unsigned(add_ln703_4_reg_2240) + unsigned(add_ln703_6_reg_2245));
    add_ln703_fu_1741_p2 <= std_logic_vector(signed(exp_res_1_V_reg_2141) + signed(exp_res_0_V_reg_2135));
    and_ln786_1_fu_897_p2 <= (xor_ln786_1_fu_891_p2 and tmp_22_fu_875_p3);
    and_ln786_2_fu_952_p2 <= (xor_ln786_2_fu_946_p2 and tmp_24_fu_930_p3);
    and_ln786_3_fu_1007_p2 <= (xor_ln786_3_fu_1001_p2 and tmp_26_fu_985_p3);
    and_ln786_4_fu_1062_p2 <= (xor_ln786_4_fu_1056_p2 and tmp_28_fu_1040_p3);
    and_ln786_5_fu_1117_p2 <= (xor_ln786_5_fu_1111_p2 and tmp_30_fu_1095_p3);
    and_ln786_6_fu_1172_p2 <= (xor_ln786_6_fu_1166_p2 and tmp_32_fu_1150_p3);
    and_ln786_7_fu_1227_p2 <= (xor_ln786_7_fu_1221_p2 and tmp_34_fu_1205_p3);
    and_ln786_8_fu_1282_p2 <= (xor_ln786_8_fu_1276_p2 and tmp_36_fu_1260_p3);
    and_ln786_9_fu_1337_p2 <= (xor_ln786_9_fu_1331_p2 and tmp_38_fu_1315_p3);
    and_ln786_fu_842_p2 <= (xor_ln786_fu_836_p2 and tmp_fu_820_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter15, io_acc_block_signal_op17, io_acc_block_signal_op326)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op17 = ap_const_logic_0))) or ((io_acc_block_signal_op326 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter15, io_acc_block_signal_op17, io_acc_block_signal_op326)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op17 = ap_const_logic_0))) or ((io_acc_block_signal_op326 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter15, io_acc_block_signal_op17, io_acc_block_signal_op326)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op17 = ap_const_logic_0))) or ((io_acc_block_signal_op326 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter15_assign_proc : process(io_acc_block_signal_op326)
    begin
                ap_block_state16_pp0_stage0_iter15 <= (io_acc_block_signal_op326 = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op17)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op17 = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to14)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exp_sum_V_fu_1775_p2 <= std_logic_vector(unsigned(add_ln703_3_reg_2235) + unsigned(add_ln703_7_fu_1771_p2));
    exp_table8_address0 <= zext_ln236_fu_1701_p1(10 - 1 downto 0);
    exp_table8_address1 <= zext_ln236_1_fu_1705_p1(10 - 1 downto 0);
    exp_table8_address2 <= zext_ln236_2_fu_1709_p1(10 - 1 downto 0);
    exp_table8_address3 <= zext_ln236_7_fu_1713_p1(10 - 1 downto 0);
    exp_table8_address4 <= zext_ln236_3_fu_1717_p1(10 - 1 downto 0);
    exp_table8_address5 <= zext_ln236_4_fu_1721_p1(10 - 1 downto 0);
    exp_table8_address6 <= zext_ln236_5_fu_1725_p1(10 - 1 downto 0);
    exp_table8_address7 <= zext_ln236_6_fu_1729_p1(10 - 1 downto 0);
    exp_table8_address8 <= zext_ln236_8_fu_1733_p1(10 - 1 downto 0);
    exp_table8_address9 <= zext_ln236_9_fu_1737_p1(10 - 1 downto 0);

    exp_table8_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce0 <= ap_const_logic_1;
        else 
            exp_table8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce1_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce1 <= ap_const_logic_1;
        else 
            exp_table8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce2_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce2 <= ap_const_logic_1;
        else 
            exp_table8_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce3_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce3 <= ap_const_logic_1;
        else 
            exp_table8_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce4_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce4 <= ap_const_logic_1;
        else 
            exp_table8_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce5_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce5 <= ap_const_logic_1;
        else 
            exp_table8_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce6_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce6 <= ap_const_logic_1;
        else 
            exp_table8_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce7_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce7 <= ap_const_logic_1;
        else 
            exp_table8_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce8_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce8 <= ap_const_logic_1;
        else 
            exp_table8_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_ce9_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            exp_table8_ce9 <= ap_const_logic_1;
        else 
            exp_table8_ce9 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_302_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_302_ce <= ap_const_logic_1;
        else 
            grp_fu_302_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_302_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_303_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_304_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_304_ce <= ap_const_logic_1;
        else 
            grp_fu_304_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_304_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_305_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_305_ce <= ap_const_logic_1;
        else 
            grp_fu_305_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_305_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_306_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_306_ce <= ap_const_logic_1;
        else 
            grp_fu_306_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_306_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_307_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_307_ce <= ap_const_logic_1;
        else 
            grp_fu_307_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_307_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_308_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_308_ce <= ap_const_logic_1;
        else 
            grp_fu_308_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_308_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_309_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_309_ce <= ap_const_logic_1;
        else 
            grp_fu_309_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_309_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_310_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_310_ce <= ap_const_logic_1;
        else 
            grp_fu_310_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_310_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);

    grp_fu_311_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_311_ce <= ap_const_logic_1;
        else 
            grp_fu_311_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_311_p0 <= sext_ln1118_fu_1794_p1(12 - 1 downto 0);
    icmp_ln1496_1_fu_717_p2 <= "1" when (signed(data_array_2_V_reg_1961) < signed(data_array_3_V_reg_1968)) else "0";
    icmp_ln1496_2_fu_739_p2 <= "1" when (signed(select_ln85_fu_729_p3) < signed(select_ln85_1_fu_734_p3)) else "0";
    icmp_ln1496_3_fu_721_p2 <= "1" when (signed(data_array_4_V_reg_1975) < signed(data_array_5_V_reg_1982)) else "0";
    icmp_ln1496_4_fu_725_p2 <= "1" when (signed(data_array_6_V_reg_1989) < signed(data_array_7_V_reg_1996)) else "0";
    icmp_ln1496_5_fu_763_p2 <= "1" when (signed(select_ln85_3_fu_753_p3) < signed(select_ln85_4_fu_758_p3)) else "0";
    icmp_ln1496_6_fu_777_p2 <= "1" when (signed(select_ln85_2_reg_2037) < signed(select_ln85_5_reg_2043)) else "0";
    icmp_ln1496_7_fu_787_p2 <= "1" when (signed(data_array_8_V_reg_2003_pp0_iter2_reg) < signed(data_array_9_V_reg_2010_pp0_iter2_reg)) else "0";
    icmp_ln1496_8_fu_796_p2 <= "1" when (signed(select_ln85_6_reg_2049) < signed(select_ln85_7_fu_791_p3)) else "0";
    icmp_ln1496_fu_713_p2 <= "1" when (signed(data_array_0_V_reg_1947) < signed(data_array_1_V_reg_1954)) else "0";
    invert_table9_address0 <= zext_ln244_fu_1790_p1(10 - 1 downto 0);

    invert_table9_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            invert_table9_ce0 <= ap_const_logic_1;
        else 
            invert_table9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op17 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op326 <= (res_V_data_9_V_full_n and res_V_data_8_V_full_n and res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    or_ln340_1_fu_915_p2 <= (xor_ln340_1_fu_909_p2 or tmp_23_fu_883_p3);
    or_ln340_2_fu_970_p2 <= (xor_ln340_2_fu_964_p2 or tmp_25_fu_938_p3);
    or_ln340_3_fu_1025_p2 <= (xor_ln340_3_fu_1019_p2 or tmp_27_fu_993_p3);
    or_ln340_4_fu_1080_p2 <= (xor_ln340_4_fu_1074_p2 or tmp_29_fu_1048_p3);
    or_ln340_5_fu_1135_p2 <= (xor_ln340_5_fu_1129_p2 or tmp_31_fu_1103_p3);
    or_ln340_6_fu_1190_p2 <= (xor_ln340_6_fu_1184_p2 or tmp_33_fu_1158_p3);
    or_ln340_7_fu_1245_p2 <= (xor_ln340_7_fu_1239_p2 or tmp_35_fu_1213_p3);
    or_ln340_8_fu_1300_p2 <= (xor_ln340_8_fu_1294_p2 or tmp_37_fu_1268_p3);
    or_ln340_9_fu_1355_p2 <= (xor_ln340_9_fu_1349_p2 or tmp_39_fu_1323_p3);
    or_ln340_fu_860_p2 <= (xor_ln340_fu_854_p2 or tmp_21_fu_828_p3);

    res_V_data_0_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_0_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_2329;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_1_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_2334;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_2_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_2339;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_3_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_2344;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_4_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_2349;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_5_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_2354;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_6_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_2359;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_7_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_2364;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_8_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_8_V_blk_n <= res_V_data_8_V_full_n;
        else 
            res_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_8_V_din <= tmp_data_8_V_reg_2369;

    res_V_data_8_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, res_V_data_9_V_full_n)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            res_V_data_9_V_blk_n <= res_V_data_9_V_full_n;
        else 
            res_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_9_V_din <= tmp_data_9_V_reg_2374;

    res_V_data_9_V_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_10_fu_1541_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1123_p2(0) = '1') else 
        tmp_16_fu_1531_p4;
    select_ln340_12_fu_1575_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1178_p2(0) = '1') else 
        tmp_17_fu_1565_p4;
    select_ln340_14_fu_1609_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1233_p2(0) = '1') else 
        tmp_18_fu_1599_p4;
    select_ln340_16_fu_1643_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_1288_p2(0) = '1') else 
        tmp_19_fu_1633_p4;
    select_ln340_18_fu_1677_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_1343_p2(0) = '1') else 
        tmp_20_fu_1667_p4;
    select_ln340_2_fu_1405_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_903_p2(0) = '1') else 
        tmp_12_fu_1395_p4;
    select_ln340_4_fu_1439_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_958_p2(0) = '1') else 
        tmp_13_fu_1429_p4;
    select_ln340_6_fu_1473_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_1013_p2(0) = '1') else 
        tmp_14_fu_1463_p4;
    select_ln340_8_fu_1507_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1068_p2(0) = '1') else 
        tmp_15_fu_1497_p4;
    select_ln340_fu_1371_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_848_p2(0) = '1') else 
        tmp_11_fu_1361_p4;
    select_ln388_1_fu_1413_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_897_p2(0) = '1') else 
        tmp_12_fu_1395_p4;
    select_ln388_2_fu_1447_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_952_p2(0) = '1') else 
        tmp_13_fu_1429_p4;
    select_ln388_3_fu_1481_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_1007_p2(0) = '1') else 
        tmp_14_fu_1463_p4;
    select_ln388_4_fu_1515_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_1062_p2(0) = '1') else 
        tmp_15_fu_1497_p4;
    select_ln388_5_fu_1549_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1117_p2(0) = '1') else 
        tmp_16_fu_1531_p4;
    select_ln388_6_fu_1583_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1172_p2(0) = '1') else 
        tmp_17_fu_1565_p4;
    select_ln388_7_fu_1617_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1227_p2(0) = '1') else 
        tmp_18_fu_1599_p4;
    select_ln388_8_fu_1651_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_1282_p2(0) = '1') else 
        tmp_19_fu_1633_p4;
    select_ln388_9_fu_1685_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_1337_p2(0) = '1') else 
        tmp_20_fu_1667_p4;
    select_ln388_fu_1379_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_842_p2(0) = '1') else 
        tmp_11_fu_1361_p4;
    select_ln85_1_fu_734_p3 <= 
        data_array_3_V_reg_1968_pp0_iter1_reg when (icmp_ln1496_1_reg_2022(0) = '1') else 
        data_array_2_V_reg_1961_pp0_iter1_reg;
    select_ln85_2_fu_745_p3 <= 
        select_ln85_1_fu_734_p3 when (icmp_ln1496_2_fu_739_p2(0) = '1') else 
        select_ln85_fu_729_p3;
    select_ln85_3_fu_753_p3 <= 
        data_array_5_V_reg_1982_pp0_iter1_reg when (icmp_ln1496_3_reg_2027(0) = '1') else 
        data_array_4_V_reg_1975_pp0_iter1_reg;
    select_ln85_4_fu_758_p3 <= 
        data_array_7_V_reg_1996_pp0_iter1_reg when (icmp_ln1496_4_reg_2032(0) = '1') else 
        data_array_6_V_reg_1989_pp0_iter1_reg;
    select_ln85_5_fu_769_p3 <= 
        select_ln85_4_fu_758_p3 when (icmp_ln1496_5_fu_763_p2(0) = '1') else 
        select_ln85_3_fu_753_p3;
    select_ln85_6_fu_781_p3 <= 
        select_ln85_5_reg_2043 when (icmp_ln1496_6_fu_777_p2(0) = '1') else 
        select_ln85_2_reg_2037;
    select_ln85_7_fu_791_p3 <= 
        data_array_9_V_reg_2010_pp0_iter3_reg when (icmp_ln1496_7_reg_2055(0) = '1') else 
        data_array_8_V_reg_2003_pp0_iter3_reg;
    select_ln85_fu_729_p3 <= 
        data_array_1_V_reg_1954_pp0_iter1_reg when (icmp_ln1496_reg_2017(0) = '1') else 
        data_array_0_V_reg_1947_pp0_iter1_reg;
        sext_ln1118_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_2260),24));

        sext_ln703_10_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_V_reg_2010_pp0_iter4_reg),17));

        sext_ln703_1_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_reg_2060),17));

        sext_ln703_2_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_1954_pp0_iter4_reg),17));

        sext_ln703_3_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_1961_pp0_iter4_reg),17));

        sext_ln703_4_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_1968_pp0_iter4_reg),17));

        sext_ln703_5_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_1975_pp0_iter4_reg),17));

        sext_ln703_6_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_1982_pp0_iter4_reg),17));

        sext_ln703_7_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_1989_pp0_iter4_reg),17));

        sext_ln703_8_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_1996_pp0_iter4_reg),17));

        sext_ln703_9_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_V_reg_2003_pp0_iter4_reg),17));

        sext_ln703_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_1947_pp0_iter4_reg),17));

    sub_ln1193_1_fu_869_p2 <= std_logic_vector(signed(sext_ln703_2_fu_866_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_2_fu_924_p2 <= std_logic_vector(signed(sext_ln703_3_fu_921_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_3_fu_979_p2 <= std_logic_vector(signed(sext_ln703_4_fu_976_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_4_fu_1034_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1031_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_5_fu_1089_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1086_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_6_fu_1144_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1141_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_7_fu_1199_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1196_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_8_fu_1254_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1251_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_9_fu_1309_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1306_p1) - signed(sext_ln703_1_fu_811_p1));
    sub_ln1193_fu_814_p2 <= std_logic_vector(signed(sext_ln703_fu_808_p1) - signed(sext_ln703_1_fu_811_p1));
    tmp_11_fu_1361_p4 <= sub_ln1193_fu_814_p2(15 downto 6);
    tmp_12_fu_1395_p4 <= sub_ln1193_1_fu_869_p2(15 downto 6);
    tmp_13_fu_1429_p4 <= sub_ln1193_2_fu_924_p2(15 downto 6);
    tmp_14_fu_1463_p4 <= sub_ln1193_3_fu_979_p2(15 downto 6);
    tmp_15_fu_1497_p4 <= sub_ln1193_4_fu_1034_p2(15 downto 6);
    tmp_16_fu_1531_p4 <= sub_ln1193_5_fu_1089_p2(15 downto 6);
    tmp_17_fu_1565_p4 <= sub_ln1193_6_fu_1144_p2(15 downto 6);
    tmp_18_fu_1599_p4 <= sub_ln1193_7_fu_1199_p2(15 downto 6);
    tmp_19_fu_1633_p4 <= sub_ln1193_8_fu_1254_p2(15 downto 6);
    tmp_20_fu_1667_p4 <= sub_ln1193_9_fu_1309_p2(15 downto 6);
    tmp_21_fu_828_p3 <= sub_ln1193_fu_814_p2(15 downto 15);
    tmp_22_fu_875_p3 <= sub_ln1193_1_fu_869_p2(16 downto 16);
    tmp_23_fu_883_p3 <= sub_ln1193_1_fu_869_p2(15 downto 15);
    tmp_24_fu_930_p3 <= sub_ln1193_2_fu_924_p2(16 downto 16);
    tmp_25_fu_938_p3 <= sub_ln1193_2_fu_924_p2(15 downto 15);
    tmp_26_fu_985_p3 <= sub_ln1193_3_fu_979_p2(16 downto 16);
    tmp_27_fu_993_p3 <= sub_ln1193_3_fu_979_p2(15 downto 15);
    tmp_28_fu_1040_p3 <= sub_ln1193_4_fu_1034_p2(16 downto 16);
    tmp_29_fu_1048_p3 <= sub_ln1193_4_fu_1034_p2(15 downto 15);
    tmp_30_fu_1095_p3 <= sub_ln1193_5_fu_1089_p2(16 downto 16);
    tmp_31_fu_1103_p3 <= sub_ln1193_5_fu_1089_p2(15 downto 15);
    tmp_32_fu_1150_p3 <= sub_ln1193_6_fu_1144_p2(16 downto 16);
    tmp_33_fu_1158_p3 <= sub_ln1193_6_fu_1144_p2(15 downto 15);
    tmp_34_fu_1205_p3 <= sub_ln1193_7_fu_1199_p2(16 downto 16);
    tmp_35_fu_1213_p3 <= sub_ln1193_7_fu_1199_p2(15 downto 15);
    tmp_36_fu_1260_p3 <= sub_ln1193_8_fu_1254_p2(16 downto 16);
    tmp_37_fu_1268_p3 <= sub_ln1193_8_fu_1254_p2(15 downto 15);
    tmp_38_fu_1315_p3 <= sub_ln1193_9_fu_1309_p2(16 downto 16);
    tmp_39_fu_1323_p3 <= sub_ln1193_9_fu_1309_p2(15 downto 15);
    tmp_fu_820_p3 <= sub_ln1193_fu_814_p2(16 downto 16);
    x_max_V_fu_801_p3 <= 
        select_ln85_7_fu_791_p3 when (icmp_ln1496_8_fu_796_p2(0) = '1') else 
        select_ln85_6_reg_2049;
    xor_ln340_10_fu_848_p2 <= (tmp_fu_820_p3 xor tmp_21_fu_828_p3);
    xor_ln340_11_fu_903_p2 <= (tmp_23_fu_883_p3 xor tmp_22_fu_875_p3);
    xor_ln340_12_fu_958_p2 <= (tmp_25_fu_938_p3 xor tmp_24_fu_930_p3);
    xor_ln340_13_fu_1013_p2 <= (tmp_27_fu_993_p3 xor tmp_26_fu_985_p3);
    xor_ln340_14_fu_1068_p2 <= (tmp_29_fu_1048_p3 xor tmp_28_fu_1040_p3);
    xor_ln340_15_fu_1123_p2 <= (tmp_31_fu_1103_p3 xor tmp_30_fu_1095_p3);
    xor_ln340_16_fu_1178_p2 <= (tmp_33_fu_1158_p3 xor tmp_32_fu_1150_p3);
    xor_ln340_17_fu_1233_p2 <= (tmp_35_fu_1213_p3 xor tmp_34_fu_1205_p3);
    xor_ln340_18_fu_1288_p2 <= (tmp_37_fu_1268_p3 xor tmp_36_fu_1260_p3);
    xor_ln340_19_fu_1343_p2 <= (tmp_39_fu_1323_p3 xor tmp_38_fu_1315_p3);
    xor_ln340_1_fu_909_p2 <= (tmp_22_fu_875_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_964_p2 <= (tmp_24_fu_930_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_1019_p2 <= (tmp_26_fu_985_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_1074_p2 <= (tmp_28_fu_1040_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1129_p2 <= (tmp_30_fu_1095_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1184_p2 <= (tmp_32_fu_1150_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1239_p2 <= (tmp_34_fu_1205_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1294_p2 <= (tmp_36_fu_1260_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1349_p2 <= (tmp_38_fu_1315_p3 xor ap_const_lv1_1);
    xor_ln340_fu_854_p2 <= (tmp_fu_820_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_891_p2 <= (tmp_23_fu_883_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_946_p2 <= (tmp_25_fu_938_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1001_p2 <= (tmp_27_fu_993_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1056_p2 <= (tmp_29_fu_1048_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1111_p2 <= (tmp_31_fu_1103_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1166_p2 <= (tmp_33_fu_1158_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1221_p2 <= (tmp_35_fu_1213_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1276_p2 <= (tmp_37_fu_1268_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1331_p2 <= (tmp_39_fu_1323_p3 xor ap_const_lv1_1);
    xor_ln786_fu_836_p2 <= (tmp_21_fu_828_p3 xor ap_const_lv1_1);
    y_V_1_fu_1421_p3 <= 
        select_ln340_2_fu_1405_p3 when (or_ln340_1_fu_915_p2(0) = '1') else 
        select_ln388_1_fu_1413_p3;
    y_V_2_fu_1455_p3 <= 
        select_ln340_4_fu_1439_p3 when (or_ln340_2_fu_970_p2(0) = '1') else 
        select_ln388_2_fu_1447_p3;
    y_V_3_fu_1489_p3 <= 
        select_ln340_6_fu_1473_p3 when (or_ln340_3_fu_1025_p2(0) = '1') else 
        select_ln388_3_fu_1481_p3;
    y_V_4_fu_1523_p3 <= 
        select_ln340_8_fu_1507_p3 when (or_ln340_4_fu_1080_p2(0) = '1') else 
        select_ln388_4_fu_1515_p3;
    y_V_5_fu_1557_p3 <= 
        select_ln340_10_fu_1541_p3 when (or_ln340_5_fu_1135_p2(0) = '1') else 
        select_ln388_5_fu_1549_p3;
    y_V_6_fu_1591_p3 <= 
        select_ln340_12_fu_1575_p3 when (or_ln340_6_fu_1190_p2(0) = '1') else 
        select_ln388_6_fu_1583_p3;
    y_V_7_fu_1625_p3 <= 
        select_ln340_14_fu_1609_p3 when (or_ln340_7_fu_1245_p2(0) = '1') else 
        select_ln388_7_fu_1617_p3;
    y_V_8_fu_1659_p3 <= 
        select_ln340_16_fu_1643_p3 when (or_ln340_8_fu_1300_p2(0) = '1') else 
        select_ln388_8_fu_1651_p3;
    y_V_9_fu_1693_p3 <= 
        select_ln340_18_fu_1677_p3 when (or_ln340_9_fu_1355_p2(0) = '1') else 
        select_ln388_9_fu_1685_p3;
    y_V_fu_1387_p3 <= 
        select_ln340_fu_1371_p3 when (or_ln340_fu_860_p2(0) = '1') else 
        select_ln388_fu_1379_p3;
    zext_ln236_1_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_2070),64));
    zext_ln236_2_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_2075),64));
    zext_ln236_3_fu_1717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_2080_pp0_iter6_reg),64));
    zext_ln236_4_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_2085_pp0_iter6_reg),64));
    zext_ln236_5_fu_1725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_2090_pp0_iter6_reg),64));
    zext_ln236_6_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_2095_pp0_iter6_reg),64));
    zext_ln236_7_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_2100),64));
    zext_ln236_8_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_reg_2105_pp0_iter6_reg),64));
    zext_ln236_9_fu_1737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_reg_2110_pp0_iter6_reg),64));
    zext_ln236_fu_1701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_2065),64));
    zext_ln244_fu_1790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_reg_2250),64));
end behav;
