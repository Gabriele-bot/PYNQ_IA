-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reduce_ap_fixed_4_Op_max_ap_fixed_16_6_5_3_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x_0_V : IN STD_LOGIC_VECTOR (15 downto 0);
    x_1_V : IN STD_LOGIC_VECTOR (15 downto 0);
    x_2_V : IN STD_LOGIC_VECTOR (15 downto 0);
    x_3_V : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of reduce_ap_fixed_4_Op_max_ap_fixed_16_6_5_3_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal select_ln85_fu_48_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln85_reg_88 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln85_9_fu_70_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln85_9_reg_94 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln52_fu_34_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1496_fu_38_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_fu_42_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln52_1_fu_56_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1496_1_fu_60_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1496_9_fu_64_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_10_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln85_10_fu_82_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_int_reg : STD_LOGIC_VECTOR (11 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln85_10_fu_82_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln85_9_reg_94 <= select_ln85_9_fu_70_p3;
                select_ln85_reg_88 <= select_ln85_fu_48_p3;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln85_10_fu_82_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln85_10_fu_82_p3;
        end if; 
    end process;

    icmp_ln1496_10_fu_78_p2 <= "1" when (signed(select_ln85_reg_88) < signed(select_ln85_9_reg_94)) else "0";
    icmp_ln1496_9_fu_64_p2 <= "1" when (signed(trunc_ln52_1_fu_56_p1) < signed(trunc_ln1496_1_fu_60_p1)) else "0";
    icmp_ln1496_fu_42_p2 <= "1" when (signed(trunc_ln52_fu_34_p1) < signed(trunc_ln1496_fu_38_p1)) else "0";
    select_ln85_10_fu_82_p3 <= 
        select_ln85_9_reg_94 when (icmp_ln1496_10_fu_78_p2(0) = '1') else 
        select_ln85_reg_88;
    select_ln85_9_fu_70_p3 <= 
        trunc_ln1496_1_fu_60_p1 when (icmp_ln1496_9_fu_64_p2(0) = '1') else 
        trunc_ln52_1_fu_56_p1;
    select_ln85_fu_48_p3 <= 
        trunc_ln1496_fu_38_p1 when (icmp_ln1496_fu_42_p2(0) = '1') else 
        trunc_ln52_fu_34_p1;
    trunc_ln1496_1_fu_60_p1 <= x_3_V(12 - 1 downto 0);
    trunc_ln1496_fu_38_p1 <= x_1_V(12 - 1 downto 0);
    trunc_ln52_1_fu_56_p1 <= x_2_V(12 - 1 downto 0);
    trunc_ln52_fu_34_p1 <= x_0_V(12 - 1 downto 0);
end behav;
