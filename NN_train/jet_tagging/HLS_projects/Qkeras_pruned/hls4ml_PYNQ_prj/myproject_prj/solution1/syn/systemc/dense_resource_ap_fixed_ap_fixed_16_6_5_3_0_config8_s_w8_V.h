// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_H__
#define __dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 384;
  static const unsigned AddressRange = 16;
  static const unsigned AddressWidth = 4;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_ram) {
        ram[0] = "0b110000011101000000000000000000000000001111000000110000000111000000001111000000000000000000000000000000000000000000000000000000000000000000010011000000000000000000000000000000000000000000000000111111000000010100000000000000000000100100010000000000000000010001000000000000000000001000000000001001000000000000000000000000000000000000000000010011000000000000000000000000000000000000000000";
        ram[1] = "0b001011111011000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000111101000000000000000000000000000000000000000000000000000000111110000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000111110000000101101000000011111000000000000000000000000000000";
        ram[2] = "0b000000111111000000000000000000000000000011111100000000000000000000000000000000000000100001000000000000000000000000000000100001000000110101000000010000100000000001000000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000010000000000000000010001000000000000000000000000000111000000000000000000111111000000000000000000000000000000";
        ram[3] = "0b000000000000000000000000000000011110000000110111000000000011000000011001000000000000000000011110000000000000000000000000000000011111111110000000011000000000000000000000000000000000000000111101000000000000000000000000000000000000000000000001000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000111101000000100110000000010011000000000000000000000000";
        ram[4] = "0b100100011100000000000000000000011101000000000000101101000000111101010110010011001010000000000000000000110010000000000000000000000000000000010110000100111101111101000000000000000000000000000000000000110100000000011011000000000000000000000000000000000000000100000000000000000000001000000000011111111101010100011111000000000000000000000000011100000000000000000000000000000000000000000000";
        ram[5] = "0b000000110111000000000000110100000000000000000001000000110110110000000000000000001011000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001000000011010000000000000110100000000000000000000000000000000000000000000000000010111000000000000000000011001000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[6] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000011000000000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000010001000000000000000000000000";
        ram[7] = "0b111011001010000000000000000000110111000000000000111100000000000000000000000000000000000000000000000000000011000000000000000000111101000000000000101000000000000000000000000000000000000000000000000000000100000000000000000000000000111100000011000000000000000111000000000000000000000110100100000000000000000000000000000000000000000000000000011010000000100111000000000000000000000000000000";
        ram[8] = "0b111111000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000111000000000000000001000000000000000000000010011000000000000111001000000000000000000111110000000111000000000001001000000000000000000000000000000000000100110000000000000000000000100000000110001001100000000000000000000000000000000111110000000001010000000000000000000000000000000000000";
        ram[9] = "0b000000111001000000000000000000000000000000000000000000111111000000000000000000100110000000000000000000001000000000000000000000000000000000111000000000000000000000001011000000000000000000001010000000001000000000110100000000000000000000000000000000000000011110000001000000000000111111000000001110111000000000000000000000000000000000001010000000011111000000100000000000000000000000000000";
        ram[10] = "0b000000111111000000000000000000000000110111001110000000000000000000000000000000000000010010000000001001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000001001010000000000000000000000000000000011111000000000000000000000000011111000000000000110101101101111101000101101100000000000000000000000000000000000000011111000000100000000000000000000000000000";
        ram[11] = "0b000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000111110000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000001100000000000000000000000000000000000000000001000000011111000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[12] = "0b000000000000000000000000000000100100000001000000000000000000101010100000000000101110000000101100000000000000000000000000110001000000110110101011000000000000000000000000000000000000000011000000000000000000000000111010000000000000000000000000000000000000000000000000000000000000000000000000000000100100000000000000000000000000000011000000000000000000000000000000000000000000000000000000";
        ram[13] = "0b000000000000000000000000000000000000000000000000011111000000000000000000000000011111000000000101001000111101000000000000000000000000000000000000111111000010000001111111000000000000000000000000001010111101000000010010000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111101000000000000000001000000000000000000000000";
        ram[14] = "0b110111001000000000000000111010000000010000011110000000000000000000010000011110000000001010100100111110000000000000000000000000100000000000010100001011000100110111001000000000000000000000001001111110000000000001000000000000000000111100000000000000000000000011000000000000000000011011000000011100111101000100000010000000000000000000001001000011000000000000100011000000000000000000000000";
        ram[15] = "0b000000110111000000000000000000001110000000011010000000000000000000000000001100111110000000100010000000000011000000000000000000111101000000111111010000000000111101001010000000000000000000000101000000000000001110000000000000000000000000000000000000000000000000111110000000000000011001000000000000111010001111000000000000000000000000000100000000010010000000101000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V) {


static const unsigned DataWidth = 384;
static const unsigned AddressRange = 16;
static const unsigned AddressWidth = 4;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_ram* meminst;


SC_CTOR(dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V) {
meminst = new dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_ram("dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_resource_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_w8_V() {
    delete meminst;
}


};//endmodule
#endif
